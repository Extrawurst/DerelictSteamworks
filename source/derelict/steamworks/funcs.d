/*
 * Copyright (c) 2015 Derelict Developers
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the names 'Derelict', 'DerelictILUT', nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
module derelict.steamworks.funcs;

private
{
    import derelict.util.system;
    import derelict.steamworks.types;
    import derelict.steamworks.interfaces;
}

@nogc nothrow extern(C)
{
    alias da_SteamAPI_Init = bool function();
    alias da_SteamAPI_Shutdown = void function();
    alias da_SteamAPI_IsSteamRunning = bool function();
    alias da_SteamClient = ISteamClient* function();

    alias da_SteamAPI_ISteamClient_CreateSteamPipe = HSteamPipe function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamClient_BReleaseSteamPipe = bool function(intptr_t instancePtr, HSteamPipe hSteamPipe);
    alias da_SteamAPI_ISteamClient_ConnectToGlobalUser = HSteamUser function(intptr_t instancePtr, HSteamPipe hSteamPipe);
    alias da_SteamAPI_ISteamClient_CreateLocalUser = HSteamUser function(intptr_t instancePtr, HSteamPipe * phSteamPipe, EAccountType eAccountType);
    alias da_SteamAPI_ISteamClient_ReleaseUser = void function(intptr_t instancePtr, HSteamPipe hSteamPipe, HSteamUser hUser);
    alias da_SteamAPI_ISteamClient_GetISteamUser = ISteamUser* function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamGameServer = ISteamGameServer * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_SetLocalIPBinding = void function(intptr_t instancePtr, uint32 unIP, uint16 usPort);
    alias da_SteamAPI_ISteamClient_GetISteamFriends = ISteamFriends * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamUtils = ISteamUtils * function(intptr_t instancePtr, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamMatchmaking = ISteamMatchmaking * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamMatchmakingServers = ISteamMatchmakingServers * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamGenericInterface = void * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamUserStats = ISteamUserStats * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamGameServerStats = ISteamGameServerStats * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamApps = ISteamApps * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamNetworking = ISteamNetworking * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamRemoteStorage = ISteamRemoteStorage * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamScreenshots = ISteamScreenshots * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_RunFrame = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamClient_GetIPCCallCount = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamClient_SetWarningMessageHook = void function(intptr_t instancePtr, SteamAPIWarningMessageHook_t pFunction);
    alias da_SteamAPI_ISteamClient_BShutdownIfAllPipesClosed = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamClient_GetISteamHTTP = ISteamHTTP * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamUnifiedMessages = ISteamUnifiedMessages * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamController = ISteamController * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamUGC = ISteamUGC * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamAppList = ISteamAppList * function(intptr_t instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamMusic = ISteamMusic * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamMusicRemote = ISteamMusicRemote * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamHTMLSurface = ISteamHTMLSurface * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_Set_SteamAPI_CPostAPIResultInProcess = void function(intptr_t instancePtr, SteamAPI_PostAPIResultInProcess_t func);
    alias da_SteamAPI_ISteamClient_Remove_SteamAPI_CPostAPIResultInProcess = void function(intptr_t instancePtr, SteamAPI_PostAPIResultInProcess_t func);
    alias da_SteamAPI_ISteamClient_Set_SteamAPI_CCheckCallbackRegisteredInProcess = void function(intptr_t instancePtr, SteamAPI_CheckCallbackRegistered_t func);
    alias da_SteamAPI_ISteamClient_GetISteamInventory = ISteamInventory * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);
    alias da_SteamAPI_ISteamClient_GetISteamVideo = ISteamVideo * function(intptr_t instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, const(char)* pchVersion);

    alias da_SteamAPI_ISteamUser_GetHSteamUser = HSteamUser function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_BLoggedOn = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_GetSteamID = uint64 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_InitiateGameConnection = int function(intptr_t instancePtr, void * pAuthBlob, int cbMaxAuthBlob, CSteamID steamIDGameServer, uint32 unIPServer, uint16 usPortServer, bool bSecure);
    alias da_SteamAPI_ISteamUser_TerminateGameConnection = void function(intptr_t instancePtr, uint32 unIPServer, uint16 usPortServer);
    alias da_SteamAPI_ISteamUser_TrackAppUsageEvent = void function(intptr_t instancePtr, CGameID gameID, int eAppUsageEvent, const(char)* pchExtraInfo);
    alias da_SteamAPI_ISteamUser_GetUserDataFolder = bool function(intptr_t instancePtr, char * pchBuffer, int cubBuffer);
    alias da_SteamAPI_ISteamUser_StartVoiceRecording = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_StopVoiceRecording = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_GetAvailableVoice = EVoiceResult function(intptr_t instancePtr, uint32 * pcbCompressed, uint32 * pcbUncompressed, uint32 nUncompressedVoiceDesiredSampleRate);
    alias da_SteamAPI_ISteamUser_GetVoice = EVoiceResult function(intptr_t instancePtr, bool bWantCompressed, void * pDestBuffer, uint32 cbDestBufferSize, uint32 * nBytesWritten, bool bWantUncompressed, void * pUncompressedDestBuffer, uint32 cbUncompressedDestBufferSize, uint32 * nUncompressBytesWritten, uint32 nUncompressedVoiceDesiredSampleRate);
    alias da_SteamAPI_ISteamUser_DecompressVoice = EVoiceResult function(intptr_t instancePtr, const void * pCompressed, uint32 cbCompressed, void * pDestBuffer, uint32 cbDestBufferSize, uint32 * nBytesWritten, uint32 nDesiredSampleRate);
    alias da_SteamAPI_ISteamUser_GetVoiceOptimalSampleRate = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_GetAuthSessionTicket = HAuthTicket function(intptr_t instancePtr, void * pTicket, int cbMaxTicket, uint32 * pcbTicket);
    alias da_SteamAPI_ISteamUser_BeginAuthSession = EBeginAuthSessionResult function(intptr_t instancePtr, const void * pAuthTicket, int cbAuthTicket, CSteamID steamID);
    alias da_SteamAPI_ISteamUser_EndAuthSession = void function(intptr_t instancePtr, CSteamID steamID);
    alias da_SteamAPI_ISteamUser_CancelAuthTicket = void function(intptr_t instancePtr, HAuthTicket hAuthTicket);
    alias da_SteamAPI_ISteamUser_UserHasLicenseForApp = EUserHasLicenseForAppResult function(intptr_t instancePtr, CSteamID steamID, AppId_t appID);
    alias da_SteamAPI_ISteamUser_BIsBehindNAT = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_AdvertiseGame = void function(intptr_t instancePtr, CSteamID steamIDGameServer, uint32 unIPServer, uint16 usPortServer);
    alias da_SteamAPI_ISteamUser_RequestEncryptedAppTicket = SteamAPICall_t function(intptr_t instancePtr, void * pDataToInclude, int cbDataToInclude);
    alias da_SteamAPI_ISteamUser_GetEncryptedAppTicket = bool function(intptr_t instancePtr, void * pTicket, int cbMaxTicket, uint32 * pcbTicket);
    alias da_SteamAPI_ISteamUser_GetGameBadgeLevel = int function(intptr_t instancePtr, int nSeries, bool bFoil);
    alias da_SteamAPI_ISteamUser_GetPlayerSteamLevel = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUser_RequestStoreAuthURL = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchRedirectURL);

    alias da_SteamAPI_ISteamFriends_GetPersonaName = const(char)* function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_SetPersonaName = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchPersonaName);
    alias da_SteamAPI_ISteamFriends_GetPersonaState = EPersonaState function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_GetFriendCount = int function(intptr_t instancePtr, int iFriendFlags);
    alias da_SteamAPI_ISteamFriends_GetFriendByIndex = uint64 function(intptr_t instancePtr, int iFriend, int iFriendFlags);
    alias da_SteamAPI_ISteamFriends_GetFriendRelationship = EFriendRelationship function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendPersonaState = EPersonaState function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendPersonaName = const(char)* function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendGamePlayed = bool function(intptr_t instancePtr, CSteamID steamIDFriend, FriendGameInfo_t * pFriendGameInfo);
    alias da_SteamAPI_ISteamFriends_GetFriendPersonaNameHistory = const(char)* function(intptr_t instancePtr, CSteamID steamIDFriend, int iPersonaName);
    alias da_SteamAPI_ISteamFriends_GetFriendSteamLevel = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetPlayerNickname = const(char)* function(intptr_t instancePtr, CSteamID steamIDPlayer);
    alias da_SteamAPI_ISteamFriends_GetFriendsGroupCount = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_GetFriendsGroupIDByIndex = FriendsGroupID_t function(intptr_t instancePtr, int iFG);
    alias da_SteamAPI_ISteamFriends_GetFriendsGroupName = const(char)* function(intptr_t instancePtr, FriendsGroupID_t friendsGroupID);
    alias da_SteamAPI_ISteamFriends_GetFriendsGroupMembersCount = int function(intptr_t instancePtr, FriendsGroupID_t friendsGroupID);
    alias da_SteamAPI_ISteamFriends_GetFriendsGroupMembersList = void function(intptr_t instancePtr, FriendsGroupID_t friendsGroupID, CSteamID * pOutSteamIDMembers, int nMembersCount);
    alias da_SteamAPI_ISteamFriends_HasFriend = bool function(intptr_t instancePtr, CSteamID steamIDFriend, int iFriendFlags);
    alias da_SteamAPI_ISteamFriends_GetClanCount = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_GetClanByIndex = uint64 function(intptr_t instancePtr, int iClan);
    alias da_SteamAPI_ISteamFriends_GetClanName = const(char)* function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanTag = const(char)* function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanActivityCounts = bool function(intptr_t instancePtr, CSteamID steamIDClan, int * pnOnline, int * pnInGame, int * pnChatting);
    alias da_SteamAPI_ISteamFriends_DownloadClanActivityCounts = SteamAPICall_t function(intptr_t instancePtr, CSteamID * psteamIDClans, int cClansToRequest);
    alias da_SteamAPI_ISteamFriends_GetFriendCountFromSource = int function(intptr_t instancePtr, CSteamID steamIDSource);
    alias da_SteamAPI_ISteamFriends_GetFriendFromSourceByIndex = uint64 function(intptr_t instancePtr, CSteamID steamIDSource, int iFriend);
    alias da_SteamAPI_ISteamFriends_IsUserInSource = bool function(intptr_t instancePtr, CSteamID steamIDUser, CSteamID steamIDSource);
    alias da_SteamAPI_ISteamFriends_SetInGameVoiceSpeaking = void function(intptr_t instancePtr, CSteamID steamIDUser, bool bSpeaking);
    alias da_SteamAPI_ISteamFriends_ActivateGameOverlay = void function(intptr_t instancePtr, const(char)* pchDialog);
    alias da_SteamAPI_ISteamFriends_ActivateGameOverlayToUser = void function(intptr_t instancePtr, const(char)* pchDialog, CSteamID steamID);
    alias da_SteamAPI_ISteamFriends_ActivateGameOverlayToWebPage = void function(intptr_t instancePtr, const(char)* pchURL);
    alias da_SteamAPI_ISteamFriends_ActivateGameOverlayToStore = void function(intptr_t instancePtr, AppId_t nAppID, EOverlayToStoreFlag eFlag);
    alias da_SteamAPI_ISteamFriends_SetPlayedWith = void function(intptr_t instancePtr, CSteamID steamIDUserPlayedWith);
    alias da_SteamAPI_ISteamFriends_ActivateGameOverlayInviteDialog = void function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamFriends_GetSmallFriendAvatar = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetMediumFriendAvatar = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetLargeFriendAvatar = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_RequestUserInformation = bool function(intptr_t instancePtr, CSteamID steamIDUser, bool bRequireNameOnly);
    alias da_SteamAPI_ISteamFriends_RequestClanOfficerList = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanOwner = uint64 function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanOfficerCount = int function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanOfficerByIndex = uint64 function(intptr_t instancePtr, CSteamID steamIDClan, int iOfficer);
    alias da_SteamAPI_ISteamFriends_GetUserRestrictions = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_SetRichPresence = bool function(intptr_t instancePtr, const(char)* pchKey, const(char)* pchValue);
    alias da_SteamAPI_ISteamFriends_ClearRichPresence = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_GetFriendRichPresence = const(char)* function(intptr_t instancePtr, CSteamID steamIDFriend, const(char)* pchKey);
    alias da_SteamAPI_ISteamFriends_GetFriendRichPresenceKeyCount = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendRichPresenceKeyByIndex = const(char)* function(intptr_t instancePtr, CSteamID steamIDFriend, int iKey);
    alias da_SteamAPI_ISteamFriends_RequestFriendRichPresence = void function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_InviteUserToGame = bool function(intptr_t instancePtr, CSteamID steamIDFriend, const(char)* pchConnectString);
    alias da_SteamAPI_ISteamFriends_GetCoplayFriendCount = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamFriends_GetCoplayFriend = uint64 function(intptr_t instancePtr, int iCoplayFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendCoplayTime = int function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_GetFriendCoplayGame = AppId_t function(intptr_t instancePtr, CSteamID steamIDFriend);
    alias da_SteamAPI_ISteamFriends_JoinClanChatRoom = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_LeaveClanChatRoom = bool function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetClanChatMemberCount = int function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamFriends_GetChatMemberByIndex = uint64 function(intptr_t instancePtr, CSteamID steamIDClan, int iUser);
    alias da_SteamAPI_ISteamFriends_SendClanChatMessage = bool function(intptr_t instancePtr, CSteamID steamIDClanChat, const(char)* pchText);
    alias da_SteamAPI_ISteamFriends_GetClanChatMessage = int function(intptr_t instancePtr, CSteamID steamIDClanChat, int iMessage, void * prgchText, int cchTextMax, EChatEntryType * peChatEntryType, CSteamID * psteamidChatter);
    alias da_SteamAPI_ISteamFriends_IsClanChatAdmin = bool function(intptr_t instancePtr, CSteamID steamIDClanChat, CSteamID steamIDUser);
    alias da_SteamAPI_ISteamFriends_IsClanChatWindowOpenInSteam = bool function(intptr_t instancePtr, CSteamID steamIDClanChat);
    alias da_SteamAPI_ISteamFriends_OpenClanChatWindowInSteam = bool function(intptr_t instancePtr, CSteamID steamIDClanChat);
    alias da_SteamAPI_ISteamFriends_CloseClanChatWindowInSteam = bool function(intptr_t instancePtr, CSteamID steamIDClanChat);
    alias da_SteamAPI_ISteamFriends_SetListenForFriendsMessages = bool function(intptr_t instancePtr, bool bInterceptEnabled);
    alias da_SteamAPI_ISteamFriends_ReplyToFriendMessage = bool function(intptr_t instancePtr, CSteamID steamIDFriend, const(char)* pchMsgToSend);
    alias da_SteamAPI_ISteamFriends_GetFriendMessage = int function(intptr_t instancePtr, CSteamID steamIDFriend, int iMessageID, void * pvData, int cubData, EChatEntryType * peChatEntryType);
    alias da_SteamAPI_ISteamFriends_GetFollowerCount = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamID);
    alias da_SteamAPI_ISteamFriends_IsFollowing = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamID);
    alias da_SteamAPI_ISteamFriends_EnumerateFollowingList = SteamAPICall_t function(intptr_t instancePtr, uint32 unStartIndex);

    alias da_SteamAPI_ISteamUtils_GetSecondsSinceAppActive = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetSecondsSinceComputerActive = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetConnectedUniverse = EUniverse function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetServerRealTime = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetIPCountry = const(char)* function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetImageSize = bool function(intptr_t instancePtr, int iImage, uint32 * pnWidth, uint32 * pnHeight);
    alias da_SteamAPI_ISteamUtils_GetImageRGBA = bool function(intptr_t instancePtr, int iImage, uint8 * pubDest, int nDestBufferSize);
    alias da_SteamAPI_ISteamUtils_GetCSERIPPort = bool function(intptr_t instancePtr, uint32 * unIP, uint16 * usPort);
    alias da_SteamAPI_ISteamUtils_GetCurrentBatteryPower = uint8 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetAppID = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_SetOverlayNotificationPosition = void function(intptr_t instancePtr, ENotificationPosition eNotificationPosition);
    alias da_SteamAPI_ISteamUtils_IsAPICallCompleted = bool function(intptr_t instancePtr, SteamAPICall_t hSteamAPICall, bool * pbFailed);
    alias da_SteamAPI_ISteamUtils_GetAPICallFailureReason = ESteamAPICallFailure function(intptr_t instancePtr, SteamAPICall_t hSteamAPICall);
    alias da_SteamAPI_ISteamUtils_GetAPICallResult = bool function(intptr_t instancePtr, SteamAPICall_t hSteamAPICall, void * pCallback, int cubCallback, int iCallbackExpected, bool * pbFailed);
    alias da_SteamAPI_ISteamUtils_RunFrame = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetIPCCallCount = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_SetWarningMessageHook = void function(intptr_t instancePtr, SteamAPIWarningMessageHook_t pFunction);
    alias da_SteamAPI_ISteamUtils_IsOverlayEnabled = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_BOverlayNeedsPresent = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_CheckFileSignature = SteamAPICall_t function(intptr_t instancePtr, const(char)* szFileName);
    alias da_SteamAPI_ISteamUtils_ShowGamepadTextInput = bool function(intptr_t instancePtr, EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eLineInputMode, const(char)* pchDescription, uint32 unCharMax, const(char)* pchExistingText);
    alias da_SteamAPI_ISteamUtils_GetEnteredGamepadTextLength = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_GetEnteredGamepadTextInput = bool function(intptr_t instancePtr, char * pchText, uint32 cchText);
    alias da_SteamAPI_ISteamUtils_GetSteamUILanguage = const(char)* function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_IsSteamRunningInVR = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUtils_SetOverlayNotificationInset = void function(intptr_t instancePtr, int nHorizontalInset, int nVerticalInset);

    alias da_SteamAPI_ISteamMatchmaking_GetFavoriteGameCount = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmaking_GetFavoriteGame = bool function(intptr_t instancePtr, int iGame, AppId_t * pnAppID, uint32 * pnIP, uint16 * pnConnPort, uint16 * pnQueryPort, uint32 * punFlags, uint32 * pRTime32LastPlayedOnServer);
    alias da_SteamAPI_ISteamMatchmaking_AddFavoriteGame = int function(intptr_t instancePtr, AppId_t nAppID, uint32 nIP, uint16 nConnPort, uint16 nQueryPort, uint32 unFlags, uint32 rTime32LastPlayedOnServer);
    alias da_SteamAPI_ISteamMatchmaking_RemoveFavoriteGame = bool function(intptr_t instancePtr, AppId_t nAppID, uint32 nIP, uint16 nConnPort, uint16 nQueryPort, uint32 unFlags);
    alias da_SteamAPI_ISteamMatchmaking_RequestLobbyList = SteamAPICall_t function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListStringFilter = void function(intptr_t instancePtr, const(char)* pchKeyToMatch, const(char)* pchValueToMatch, ELobbyComparison eComparisonType);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListNumericalFilter = void function(intptr_t instancePtr, const(char)* pchKeyToMatch, int nValueToMatch, ELobbyComparison eComparisonType);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListNearValueFilter = void function(intptr_t instancePtr, const(char)* pchKeyToMatch, int nValueToBeCloseTo);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable = void function(intptr_t instancePtr, int nSlotsAvailable);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListDistanceFilter = void function(intptr_t instancePtr, ELobbyDistanceFilter eLobbyDistanceFilter);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListResultCountFilter = void function(intptr_t instancePtr, int cMaxResults);
    alias da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter = void function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyByIndex = uint64 function(intptr_t instancePtr, int iLobby);
    alias da_SteamAPI_ISteamMatchmaking_CreateLobby = SteamAPICall_t function(intptr_t instancePtr, ELobbyType eLobbyType, int cMaxMembers);
    alias da_SteamAPI_ISteamMatchmaking_JoinLobby = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_LeaveLobby = void function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_InviteUserToLobby = bool function(intptr_t instancePtr, CSteamID steamIDLobby, CSteamID steamIDInvitee);
    alias da_SteamAPI_ISteamMatchmaking_GetNumLobbyMembers = int function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyMemberByIndex = uint64 function(intptr_t instancePtr, CSteamID steamIDLobby, int iMember);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyData = const(char)* function(intptr_t instancePtr, CSteamID steamIDLobby, const(char)* pchKey);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyData = bool function(intptr_t instancePtr, CSteamID steamIDLobby, const(char)* pchKey, const(char)* pchValue);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyDataCount = int function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyDataByIndex = bool function(intptr_t instancePtr, CSteamID steamIDLobby, int iLobbyData, char * pchKey, int cchKeyBufferSize, char * pchValue, int cchValueBufferSize);
    alias da_SteamAPI_ISteamMatchmaking_DeleteLobbyData = bool function(intptr_t instancePtr, CSteamID steamIDLobby, const(char)* pchKey);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyMemberData = const(char)* function(intptr_t instancePtr, CSteamID steamIDLobby, CSteamID steamIDUser, const(char)* pchKey);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyMemberData = void function(intptr_t instancePtr, CSteamID steamIDLobby, const(char)* pchKey, const(char)* pchValue);
    alias da_SteamAPI_ISteamMatchmaking_SendLobbyChatMsg = bool function(intptr_t instancePtr, CSteamID steamIDLobby, const void * pvMsgBody, int cubMsgBody);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyChatEntry = int function(intptr_t instancePtr, CSteamID steamIDLobby, int iChatID, CSteamID * pSteamIDUser, void * pvData, int cubData, EChatEntryType * peChatEntryType);
    alias da_SteamAPI_ISteamMatchmaking_RequestLobbyData = bool function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyGameServer = void function(intptr_t instancePtr, CSteamID steamIDLobby, uint32 unGameServerIP, uint16 unGameServerPort, CSteamID steamIDGameServer);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyGameServer = bool function(intptr_t instancePtr, CSteamID steamIDLobby, uint32 * punGameServerIP, uint16 * punGameServerPort, CSteamID * psteamIDGameServer);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyMemberLimit = bool function(intptr_t instancePtr, CSteamID steamIDLobby, int cMaxMembers);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyMemberLimit = int function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyType = bool function(intptr_t instancePtr, CSteamID steamIDLobby, ELobbyType eLobbyType);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyJoinable = bool function(intptr_t instancePtr, CSteamID steamIDLobby, bool bLobbyJoinable);
    alias da_SteamAPI_ISteamMatchmaking_GetLobbyOwner = uint64 function(intptr_t instancePtr, CSteamID steamIDLobby);
    alias da_SteamAPI_ISteamMatchmaking_SetLobbyOwner = bool function(intptr_t instancePtr, CSteamID steamIDLobby, CSteamID steamIDNewOwner);
    alias da_SteamAPI_ISteamMatchmaking_SetLinkedLobby = bool function(intptr_t instancePtr, CSteamID steamIDLobby, CSteamID steamIDLobbyDependent);
    alias da_SteamAPI_ISteamMatchmakingServerListResponse_ServerResponded = void function(intptr_t instancePtr, HServerListRequest hRequest, int iServer);
    alias da_SteamAPI_ISteamMatchmakingServerListResponse_ServerFailedToRespond = void function(intptr_t instancePtr, HServerListRequest hRequest, int iServer);
    alias da_SteamAPI_ISteamMatchmakingServerListResponse_RefreshComplete = void function(intptr_t instancePtr, HServerListRequest hRequest, EMatchMakingServerResponse response);
    alias da_SteamAPI_ISteamMatchmakingPingResponse_ServerResponded = void function(intptr_t instancePtr, gameserveritem_t* server);
    alias da_SteamAPI_ISteamMatchmakingPingResponse_ServerFailedToRespond = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmakingPlayersResponse_AddPlayerToList = void function(intptr_t instancePtr, const(char)* pchName, int nScore, float flTimePlayed);
    alias da_SteamAPI_ISteamMatchmakingPlayersResponse_PlayersFailedToRespond = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmakingPlayersResponse_PlayersRefreshComplete = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmakingRulesResponse_RulesResponded = void function(intptr_t instancePtr, const(char)* pchRule, const(char)* pchValue);
    alias da_SteamAPI_ISteamMatchmakingRulesResponse_RulesFailedToRespond = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmakingRulesResponse_RulesRefreshComplete = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestInternetServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestLANServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestFriendsServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestFavoritesServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestHistoryServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_RequestSpectatorServerList = HServerListRequest function(intptr_t instancePtr, AppId_t iApp, MatchMakingKeyValuePair_t ** ppchFilters, uint32 nFilters, ISteamMatchmakingServerListResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_ReleaseRequest = void function(intptr_t instancePtr, HServerListRequest hServerListRequest);
    alias da_SteamAPI_ISteamMatchmakingServers_GetServerDetails = gameserveritem_t * function(intptr_t instancePtr, HServerListRequest hRequest, int iServer);
    alias da_SteamAPI_ISteamMatchmakingServers_CancelQuery = void function(intptr_t instancePtr, HServerListRequest hRequest);
    alias da_SteamAPI_ISteamMatchmakingServers_RefreshQuery = void function(intptr_t instancePtr, HServerListRequest hRequest);
    alias da_SteamAPI_ISteamMatchmakingServers_IsRefreshing = bool function(intptr_t instancePtr, HServerListRequest hRequest);
    alias da_SteamAPI_ISteamMatchmakingServers_GetServerCount = int function(intptr_t instancePtr, HServerListRequest hRequest);
    alias da_SteamAPI_ISteamMatchmakingServers_RefreshServer = void function(intptr_t instancePtr, HServerListRequest hRequest, int iServer);
    alias da_SteamAPI_ISteamMatchmakingServers_PingServer = HServerQuery function(intptr_t instancePtr, uint32 unIP, uint16 usPort, ISteamMatchmakingPingResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_PlayerDetails = HServerQuery function(intptr_t instancePtr, uint32 unIP, uint16 usPort, ISteamMatchmakingPlayersResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_ServerRules = HServerQuery function(intptr_t instancePtr, uint32 unIP, uint16 usPort, ISteamMatchmakingRulesResponse * pRequestServersResponse);
    alias da_SteamAPI_ISteamMatchmakingServers_CancelServerQuery = void function(intptr_t instancePtr, HServerQuery hServerQuery);

    alias da_SteamAPI_ISteamRemoteStorage_FileWrite = bool function(intptr_t instancePtr, const(char)* pchFile, const void * pvData, int32 cubData);
    alias da_SteamAPI_ISteamRemoteStorage_FileRead = int32 function(intptr_t instancePtr, const(char)* pchFile, void * pvData, int32 cubDataToRead);
    alias da_SteamAPI_ISteamRemoteStorage_FileForget = bool function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_FileDelete = bool function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_FileShare = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_SetSyncPlatforms = bool function(intptr_t instancePtr, const(char)* pchFile, ERemoteStoragePlatform eRemoteStoragePlatform);
    alias da_SteamAPI_ISteamRemoteStorage_FileWriteStreamOpen = UGCFileWriteStreamHandle_t function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_FileWriteStreamWriteChunk = bool function(intptr_t instancePtr, UGCFileWriteStreamHandle_t writeHandle, const void * pvData, int32 cubData);
    alias da_SteamAPI_ISteamRemoteStorage_FileWriteStreamClose = bool function(intptr_t instancePtr, UGCFileWriteStreamHandle_t writeHandle);
    alias da_SteamAPI_ISteamRemoteStorage_FileWriteStreamCancel = bool function(intptr_t instancePtr, UGCFileWriteStreamHandle_t writeHandle);
    alias da_SteamAPI_ISteamRemoteStorage_FileExists = bool function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_FilePersisted = bool function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_GetFileSize = int32 function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_GetFileTimestamp = int64 function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_GetSyncPlatforms = ERemoteStoragePlatform function(intptr_t instancePtr, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_GetFileCount = int32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamRemoteStorage_GetFileNameAndSize = const(char)* function(intptr_t instancePtr, int iFile, int32 * pnFileSizeInBytes);
    alias da_SteamAPI_ISteamRemoteStorage_GetQuota = bool function(intptr_t instancePtr, int32 * pnTotalBytes, int32 * puAvailableBytes);
    alias da_SteamAPI_ISteamRemoteStorage_IsCloudEnabledForAccount = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamRemoteStorage_IsCloudEnabledForApp = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamRemoteStorage_SetCloudEnabledForApp = void function(intptr_t instancePtr, bool bEnabled);
    alias da_SteamAPI_ISteamRemoteStorage_UGCDownload = SteamAPICall_t function(intptr_t instancePtr, UGCHandle_t hContent, uint32 unPriority);
    alias da_SteamAPI_ISteamRemoteStorage_GetUGCDownloadProgress = bool function(intptr_t instancePtr, UGCHandle_t hContent, int32 * pnBytesDownloaded, int32 * pnBytesExpected);
    alias da_SteamAPI_ISteamRemoteStorage_GetUGCDetails = bool function(intptr_t instancePtr, UGCHandle_t hContent, AppId_t * pnAppID, char ** ppchName, int32 * pnFileSizeInBytes, CSteamID * pSteamIDOwner);
    alias da_SteamAPI_ISteamRemoteStorage_UGCRead = int32 function(intptr_t instancePtr, UGCHandle_t hContent, void * pvData, int32 cubDataToRead, uint32 cOffset, EUGCReadAction eAction);
    alias da_SteamAPI_ISteamRemoteStorage_GetCachedUGCCount = int32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamRemoteStorage_GetCachedUGCHandle = UGCHandle_t function(intptr_t instancePtr, int32 iCachedContent);
    alias da_SteamAPI_ISteamRemoteStorage_PublishWorkshopFile = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchFile, const(char)* pchPreviewFile, AppId_t nConsumerAppId, const(char)* pchTitle, const(char)* pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, SteamParamStringArray_t * pTags, EWorkshopFileType eWorkshopFileType);
    alias da_SteamAPI_ISteamRemoteStorage_CreatePublishedFileUpdateRequest = PublishedFileUpdateHandle_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileFile = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, const(char)* pchFile);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFilePreviewFile = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, const(char)* pchPreviewFile);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTitle = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, const(char)* pchTitle);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileDescription = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, const(char)* pchDescription);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileVisibility = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, ERemoteStoragePublishedFileVisibility eVisibility);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTags = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, SteamParamStringArray_t * pTags);
    alias da_SteamAPI_ISteamRemoteStorage_CommitPublishedFileUpdate = SteamAPICall_t function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle);
    alias da_SteamAPI_ISteamRemoteStorage_GetPublishedFileDetails = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId, uint32 unMaxSecondsOld);
    alias da_SteamAPI_ISteamRemoteStorage_DeletePublishedFile = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_EnumerateUserPublishedFiles = SteamAPICall_t function(intptr_t instancePtr, uint32 unStartIndex);
    alias da_SteamAPI_ISteamRemoteStorage_SubscribePublishedFile = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_EnumerateUserSubscribedFiles = SteamAPICall_t function(intptr_t instancePtr, uint32 unStartIndex);
    alias da_SteamAPI_ISteamRemoteStorage_UnsubscribePublishedFile = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription = bool function(intptr_t instancePtr, PublishedFileUpdateHandle_t updateHandle, const(char)* pchChangeDescription);
    alias da_SteamAPI_ISteamRemoteStorage_GetPublishedItemVoteDetails = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_UpdateUserPublishedItemVote = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId, bool bVoteUp);
    alias da_SteamAPI_ISteamRemoteStorage_GetUserPublishedItemVoteDetails = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId);
    alias da_SteamAPI_ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamId, uint32 unStartIndex, SteamParamStringArray_t * pRequiredTags, SteamParamStringArray_t * pExcludedTags);
    alias da_SteamAPI_ISteamRemoteStorage_PublishVideo = SteamAPICall_t function(intptr_t instancePtr, EWorkshopVideoProvider eVideoProvider, const(char)* pchVideoAccount, const(char)* pchVideoIdentifier, const(char)* pchPreviewFile, AppId_t nConsumerAppId, const(char)* pchTitle, const(char)* pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, SteamParamStringArray_t * pTags);
    alias da_SteamAPI_ISteamRemoteStorage_SetUserPublishedFileAction = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t unPublishedFileId, EWorkshopFileAction eAction);
    alias da_SteamAPI_ISteamRemoteStorage_EnumeratePublishedFilesByUserAction = SteamAPICall_t function(intptr_t instancePtr, EWorkshopFileAction eAction, uint32 unStartIndex);
    alias da_SteamAPI_ISteamRemoteStorage_EnumeratePublishedWorkshopFiles = SteamAPICall_t function(intptr_t instancePtr, EWorkshopEnumerationType eEnumerationType, uint32 unStartIndex, uint32 unCount, uint32 unDays, SteamParamStringArray_t * pTags, SteamParamStringArray_t * pUserTags);
    alias da_SteamAPI_ISteamRemoteStorage_UGCDownloadToLocation = SteamAPICall_t function(intptr_t instancePtr, UGCHandle_t hContent, const(char)* pchLocation, uint32 unPriority);

    alias da_SteamAPI_ISteamUserStats_RequestCurrentStats = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUserStats_GetStat = bool function(intptr_t instancePtr, const(char)* pchName, int32 * pData);
    alias da_SteamAPI_ISteamUserStats_GetStat0 = bool function(intptr_t instancePtr, const(char)* pchName, float * pData);
    alias da_SteamAPI_ISteamUserStats_SetStat = bool function(intptr_t instancePtr, const(char)* pchName, int32 nData);
    alias da_SteamAPI_ISteamUserStats_SetStat0 = bool function(intptr_t instancePtr, const(char)* pchName, float fData);
    alias da_SteamAPI_ISteamUserStats_UpdateAvgRateStat = bool function(intptr_t instancePtr, const(char)* pchName, float flCountThisSession, double dSessionLength);
    alias da_SteamAPI_ISteamUserStats_GetAchievement = bool function(intptr_t instancePtr, const(char)* pchName, bool * pbAchieved);
    alias da_SteamAPI_ISteamUserStats_SetAchievement = bool function(intptr_t instancePtr, const(char)* pchName);
    alias da_SteamAPI_ISteamUserStats_ClearAchievement = bool function(intptr_t instancePtr, const(char)* pchName);
    alias da_SteamAPI_ISteamUserStats_GetAchievementAndUnlockTime = bool function(intptr_t instancePtr, const(char)* pchName, bool * pbAchieved, uint32 * punUnlockTime);
    alias da_SteamAPI_ISteamUserStats_StoreStats = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUserStats_GetAchievementIcon = int function(intptr_t instancePtr, const(char)* pchName);
    alias da_SteamAPI_ISteamUserStats_GetAchievementDisplayAttribute = const(char)* function(intptr_t instancePtr, const(char)* pchName, const(char)* pchKey);
    alias da_SteamAPI_ISteamUserStats_IndicateAchievementProgress = bool function(intptr_t instancePtr, const(char)* pchName, uint32 nCurProgress, uint32 nMaxProgress);
    alias da_SteamAPI_ISteamUserStats_GetNumAchievements = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUserStats_GetAchievementName = const(char)* function(intptr_t instancePtr, uint32 iAchievement);
    alias da_SteamAPI_ISteamUserStats_RequestUserStats = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDUser);
    alias da_SteamAPI_ISteamUserStats_GetUserStat = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, int32 * pData);
    alias da_SteamAPI_ISteamUserStats_GetUserStat0 = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, float * pData);
    alias da_SteamAPI_ISteamUserStats_GetUserAchievement = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, bool * pbAchieved);
    alias da_SteamAPI_ISteamUserStats_GetUserAchievementAndUnlockTime = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, bool * pbAchieved, uint32 * punUnlockTime);
    alias da_SteamAPI_ISteamUserStats_ResetAllStats = bool function(intptr_t instancePtr, bool bAchievementsToo);
    alias da_SteamAPI_ISteamUserStats_FindOrCreateLeaderboard = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
    alias da_SteamAPI_ISteamUserStats_FindLeaderboard = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchLeaderboardName);
    alias da_SteamAPI_ISteamUserStats_GetLeaderboardName = const(char)* function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard);
    alias da_SteamAPI_ISteamUserStats_GetLeaderboardEntryCount = int function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard);
    alias da_SteamAPI_ISteamUserStats_GetLeaderboardSortMethod = ELeaderboardSortMethod function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard);
    alias da_SteamAPI_ISteamUserStats_GetLeaderboardDisplayType = ELeaderboardDisplayType function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard);
    alias da_SteamAPI_ISteamUserStats_DownloadLeaderboardEntries = SteamAPICall_t function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd);
    alias da_SteamAPI_ISteamUserStats_DownloadLeaderboardEntriesForUsers = SteamAPICall_t function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard, CSteamID * prgUsers, int cUsers);
    alias da_SteamAPI_ISteamUserStats_GetDownloadedLeaderboardEntry = bool function(intptr_t instancePtr, SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, LeaderboardEntry_t * pLeaderboardEntry, int32 * pDetails, int cDetailsMax);
    alias da_SteamAPI_ISteamUserStats_UploadLeaderboardScore = SteamAPICall_t function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int32 nScore, const int32 * pScoreDetails, int cScoreDetailsCount);
    alias da_SteamAPI_ISteamUserStats_AttachLeaderboardUGC = SteamAPICall_t function(intptr_t instancePtr, SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC);
    alias da_SteamAPI_ISteamUserStats_GetNumberOfCurrentPlayers = SteamAPICall_t function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUserStats_RequestGlobalAchievementPercentages = SteamAPICall_t function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUserStats_GetMostAchievedAchievementInfo = int function(intptr_t instancePtr, char * pchName, uint32 unNameBufLen, float * pflPercent, bool * pbAchieved);
    alias da_SteamAPI_ISteamUserStats_GetNextMostAchievedAchievementInfo = int function(intptr_t instancePtr, int iIteratorPrevious, char * pchName, uint32 unNameBufLen, float * pflPercent, bool * pbAchieved);
    alias da_SteamAPI_ISteamUserStats_GetAchievementAchievedPercent = bool function(intptr_t instancePtr, const(char)* pchName, float * pflPercent);
    alias da_SteamAPI_ISteamUserStats_RequestGlobalStats = SteamAPICall_t function(intptr_t instancePtr, int nHistoryDays);
    alias da_SteamAPI_ISteamUserStats_GetGlobalStat = bool function(intptr_t instancePtr, const(char)* pchStatName, int64 * pData);
    alias da_SteamAPI_ISteamUserStats_GetGlobalStat0 = bool function(intptr_t instancePtr, const(char)* pchStatName, double * pData);
    alias da_SteamAPI_ISteamUserStats_GetGlobalStatHistory = int32 function(intptr_t instancePtr, const(char)* pchStatName, int64 * pData, uint32 cubData);
    alias da_SteamAPI_ISteamUserStats_GetGlobalStatHistory0 = int32 function(intptr_t instancePtr, const(char)* pchStatName, double * pData, uint32 cubData);

    alias da_SteamAPI_ISteamApps_BIsSubscribed = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_BIsLowViolence = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_BIsCybercafe = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_BIsVACBanned = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_GetCurrentGameLanguage = const(char)* function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_GetAvailableGameLanguages = const(char)* function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_BIsSubscribedApp = bool function(intptr_t instancePtr, AppId_t appID);
    alias da_SteamAPI_ISteamApps_BIsDlcInstalled = bool function(intptr_t instancePtr, AppId_t appID);
    alias da_SteamAPI_ISteamApps_GetEarliestPurchaseUnixTime = uint32 function(intptr_t instancePtr, AppId_t nAppID);
    alias da_SteamAPI_ISteamApps_BIsSubscribedFromFreeWeekend = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_GetDLCCount = int function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_BGetDLCDataByIndex = bool function(intptr_t instancePtr, int iDLC, AppId_t * pAppID, bool * pbAvailable, char * pchName, int cchNameBufferSize);
    alias da_SteamAPI_ISteamApps_InstallDLC = void function(intptr_t instancePtr, AppId_t nAppID);
    alias da_SteamAPI_ISteamApps_UninstallDLC = void function(intptr_t instancePtr, AppId_t nAppID);
    alias da_SteamAPI_ISteamApps_RequestAppProofOfPurchaseKey = void function(intptr_t instancePtr, AppId_t nAppID);
    alias da_SteamAPI_ISteamApps_GetCurrentBetaName = bool function(intptr_t instancePtr, char * pchName, int cchNameBufferSize);
    alias da_SteamAPI_ISteamApps_MarkContentCorrupt = bool function(intptr_t instancePtr, bool bMissingFilesOnly);
    alias da_SteamAPI_ISteamApps_GetInstalledDepots = uint32 function(intptr_t instancePtr, AppId_t appID, DepotId_t * pvecDepots, uint32 cMaxDepots);
    alias da_SteamAPI_ISteamApps_GetAppInstallDir = uint32 function(intptr_t instancePtr, AppId_t appID, char * pchFolder, uint32 cchFolderBufferSize);
    alias da_SteamAPI_ISteamApps_BIsAppInstalled = bool function(intptr_t instancePtr, AppId_t appID);
    alias da_SteamAPI_ISteamApps_GetAppOwner = uint64 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamApps_GetLaunchQueryParam = const(char)* function(intptr_t instancePtr, const(char)* pchKey);
    alias da_SteamAPI_ISteamApps_GetDlcDownloadProgress = bool function(intptr_t instancePtr, AppId_t nAppID, uint64 * punBytesDownloaded, uint64 * punBytesTotal);
    alias da_SteamAPI_ISteamApps_GetAppBuildId = int function(intptr_t instancePtr);

    alias da_SteamAPI_ISteamNetworking_SendP2PPacket = bool function(intptr_t instancePtr, CSteamID steamIDRemote, const void * pubData, uint32 cubData, EP2PSend eP2PSendType, int nChannel);
    alias da_SteamAPI_ISteamNetworking_IsP2PPacketAvailable = bool function(intptr_t instancePtr, uint32 * pcubMsgSize, int nChannel);
    alias da_SteamAPI_ISteamNetworking_ReadP2PPacket = bool function(intptr_t instancePtr, void * pubDest, uint32 cubDest, uint32 * pcubMsgSize, CSteamID * psteamIDRemote, int nChannel);
    alias da_SteamAPI_ISteamNetworking_AcceptP2PSessionWithUser = bool function(intptr_t instancePtr, CSteamID steamIDRemote);
    alias da_SteamAPI_ISteamNetworking_CloseP2PSessionWithUser = bool function(intptr_t instancePtr, CSteamID steamIDRemote);
    alias da_SteamAPI_ISteamNetworking_CloseP2PChannelWithUser = bool function(intptr_t instancePtr, CSteamID steamIDRemote, int nChannel);
    alias da_SteamAPI_ISteamNetworking_GetP2PSessionState = bool function(intptr_t instancePtr, CSteamID steamIDRemote, P2PSessionState_t * pConnectionState);
    alias da_SteamAPI_ISteamNetworking_AllowP2PPacketRelay = bool function(intptr_t instancePtr, bool bAllow);
    alias da_SteamAPI_ISteamNetworking_CreateListenSocket = SNetListenSocket_t function(intptr_t instancePtr, int nVirtualP2PPort, uint32 nIP, uint16 nPort, bool bAllowUseOfPacketRelay);
    alias da_SteamAPI_ISteamNetworking_CreateP2PConnectionSocket = SNetSocket_t function(intptr_t instancePtr, CSteamID steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay);
    alias da_SteamAPI_ISteamNetworking_CreateConnectionSocket = SNetSocket_t function(intptr_t instancePtr, uint32 nIP, uint16 nPort, int nTimeoutSec);
    alias da_SteamAPI_ISteamNetworking_DestroySocket = bool function(intptr_t instancePtr, SNetSocket_t hSocket, bool bNotifyRemoteEnd);
    alias da_SteamAPI_ISteamNetworking_DestroyListenSocket = bool function(intptr_t instancePtr, SNetListenSocket_t hSocket, bool bNotifyRemoteEnd);
    alias da_SteamAPI_ISteamNetworking_SendDataOnSocket = bool function(intptr_t instancePtr, SNetSocket_t hSocket, void * pubData, uint32 cubData, bool bReliable);
    alias da_SteamAPI_ISteamNetworking_IsDataAvailableOnSocket = bool function(intptr_t instancePtr, SNetSocket_t hSocket, uint32 * pcubMsgSize);
    alias da_SteamAPI_ISteamNetworking_RetrieveDataFromSocket = bool function(intptr_t instancePtr, SNetSocket_t hSocket, void * pubDest, uint32 cubDest, uint32 * pcubMsgSize);
    alias da_SteamAPI_ISteamNetworking_IsDataAvailable = bool function(intptr_t instancePtr, SNetListenSocket_t hListenSocket, uint32 * pcubMsgSize, SNetSocket_t * phSocket);
    alias da_SteamAPI_ISteamNetworking_RetrieveData = bool function(intptr_t instancePtr, SNetListenSocket_t hListenSocket, void * pubDest, uint32 cubDest, uint32 * pcubMsgSize, SNetSocket_t * phSocket);
    alias da_SteamAPI_ISteamNetworking_GetSocketInfo = bool function(intptr_t instancePtr, SNetSocket_t hSocket, CSteamID * pSteamIDRemote, int * peSocketStatus, uint32 * punIPRemote, uint16 * punPortRemote);
    alias da_SteamAPI_ISteamNetworking_GetListenSocketInfo = bool function(intptr_t instancePtr, SNetListenSocket_t hListenSocket, uint32 * pnIP, uint16 * pnPort);
    alias da_SteamAPI_ISteamNetworking_GetSocketConnectionType = ESNetSocketConnectionType function(intptr_t instancePtr, SNetSocket_t hSocket);
    alias da_SteamAPI_ISteamNetworking_GetMaxPacketSize = int function(intptr_t instancePtr, SNetSocket_t hSocket);

    alias da_SteamAPI_ISteamScreenshots_WriteScreenshot = ScreenshotHandle function(intptr_t instancePtr, void * pubRGB, uint32 cubRGB, int nWidth, int nHeight);
    alias da_SteamAPI_ISteamScreenshots_AddScreenshotToLibrary = ScreenshotHandle function(intptr_t instancePtr, const(char)* pchFilename, const(char)* pchThumbnailFilename, int nWidth, int nHeight);
    alias da_SteamAPI_ISteamScreenshots_TriggerScreenshot = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamScreenshots_HookScreenshots = void function(intptr_t instancePtr, bool bHook);
    alias da_SteamAPI_ISteamScreenshots_SetLocation = bool function(intptr_t instancePtr, ScreenshotHandle hScreenshot, const(char)* pchLocation);
    alias da_SteamAPI_ISteamScreenshots_TagUser = bool function(intptr_t instancePtr, ScreenshotHandle hScreenshot, CSteamID steamID);
    alias da_SteamAPI_ISteamScreenshots_TagPublishedFile = bool function(intptr_t instancePtr, ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID);

    alias da_SteamAPI_ISteamMusic_BIsEnabled = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_BIsPlaying = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_GetPlaybackStatus = AudioPlayback_Status function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_Play = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_Pause = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_PlayPrevious = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_PlayNext = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusic_SetVolume = void function(intptr_t instancePtr, float flVolume);
    alias da_SteamAPI_ISteamMusic_GetVolume = float function(intptr_t instancePtr);

    alias da_SteamAPI_ISteamMusicRemote_RegisterSteamMusicRemote = bool function(intptr_t instancePtr, const(char)* pchName);
    alias da_SteamAPI_ISteamMusicRemote_DeregisterSteamMusicRemote = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_BIsCurrentMusicRemote = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_BActivationSuccess = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_SetDisplayName = bool function(intptr_t instancePtr, const(char)* pchDisplayName);
    alias da_SteamAPI_ISteamMusicRemote_SetPNGIcon_64x64 = bool function(intptr_t instancePtr, void * pvBuffer, uint32 cbBufferLength);
    alias da_SteamAPI_ISteamMusicRemote_EnablePlayPrevious = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_EnablePlayNext = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_EnableShuffled = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_EnableLooped = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_EnableQueue = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_EnablePlaylists = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_UpdatePlaybackStatus = bool function(intptr_t instancePtr, AudioPlayback_Status nStatus);
    alias da_SteamAPI_ISteamMusicRemote_UpdateShuffled = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_UpdateLooped = bool function(intptr_t instancePtr, bool bValue);
    alias da_SteamAPI_ISteamMusicRemote_UpdateVolume = bool function(intptr_t instancePtr, float flValue);
    alias da_SteamAPI_ISteamMusicRemote_CurrentEntryWillChange = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_CurrentEntryIsAvailable = bool function(intptr_t instancePtr, bool bAvailable);
    alias da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryText = bool function(intptr_t instancePtr, const(char)* pchText);
    alias da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds = bool function(intptr_t instancePtr, int nValue);
    alias da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryCoverArt = bool function(intptr_t instancePtr, void * pvBuffer, uint32 cbBufferLength);
    alias da_SteamAPI_ISteamMusicRemote_CurrentEntryDidChange = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_QueueWillChange = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_ResetQueueEntries = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_SetQueueEntry = bool function(intptr_t instancePtr, int nID, int nPosition, const(char)* pchEntryText);
    alias da_SteamAPI_ISteamMusicRemote_SetCurrentQueueEntry = bool function(intptr_t instancePtr, int nID);
    alias da_SteamAPI_ISteamMusicRemote_QueueDidChange = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_PlaylistWillChange = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_ResetPlaylistEntries = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamMusicRemote_SetPlaylistEntry = bool function(intptr_t instancePtr, int nID, int nPosition, const(char)* pchEntryText);
    alias da_SteamAPI_ISteamMusicRemote_SetCurrentPlaylistEntry = bool function(intptr_t instancePtr, int nID);
    alias da_SteamAPI_ISteamMusicRemote_PlaylistDidChange = bool function(intptr_t instancePtr);

    alias da_SteamAPI_ISteamHTTP_CreateHTTPRequest = HTTPRequestHandle function(intptr_t instancePtr, EHTTPMethod eHTTPRequestMethod, const(char)* pchAbsoluteURL);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestContextValue = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint64 ulContextValue);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestNetworkActivityTimeout = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint32 unTimeoutSeconds);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestHeaderValue = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchHeaderName, const(char)* pchHeaderValue);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestGetOrPostParameter = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchParamName, const(char)* pchParamValue);
    alias da_SteamAPI_ISteamHTTP_SendHTTPRequest = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, SteamAPICall_t * pCallHandle);
    alias da_SteamAPI_ISteamHTTP_SendHTTPRequestAndStreamResponse = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, SteamAPICall_t * pCallHandle);
    alias da_SteamAPI_ISteamHTTP_DeferHTTPRequest = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest);
    alias da_SteamAPI_ISteamHTTP_PrioritizeHTTPRequest = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest);
    alias da_SteamAPI_ISteamHTTP_GetHTTPResponseHeaderSize = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchHeaderName, uint32 * unResponseHeaderSize);
    alias da_SteamAPI_ISteamHTTP_GetHTTPResponseHeaderValue = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchHeaderName, uint8 * pHeaderValueBuffer, uint32 unBufferSize);
    alias da_SteamAPI_ISteamHTTP_GetHTTPResponseBodySize = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint32 * unBodySize);
    alias da_SteamAPI_ISteamHTTP_GetHTTPResponseBodyData = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint8 * pBodyDataBuffer, uint32 unBufferSize);
    alias da_SteamAPI_ISteamHTTP_GetHTTPStreamingResponseBodyData = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint32 cOffset, uint8 * pBodyDataBuffer, uint32 unBufferSize);
    alias da_SteamAPI_ISteamHTTP_ReleaseHTTPRequest = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest);
    alias da_SteamAPI_ISteamHTTP_GetHTTPDownloadProgressPct = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, float * pflPercentOut);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestRawPostBody = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchContentType, uint8 * pubBody, uint32 unBodyLen);
    alias da_SteamAPI_ISteamHTTP_CreateCookieContainer = HTTPCookieContainerHandle function(intptr_t instancePtr, bool bAllowResponsesToModify);
    alias da_SteamAPI_ISteamHTTP_ReleaseCookieContainer = bool function(intptr_t instancePtr, HTTPCookieContainerHandle hCookieContainer);
    alias da_SteamAPI_ISteamHTTP_SetCookie = bool function(intptr_t instancePtr, HTTPCookieContainerHandle hCookieContainer, const(char)* pchHost, const(char)* pchUrl, const(char)* pchCookie);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestCookieContainer = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestUserAgentInfo = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, const(char)* pchUserAgentInfo);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate);
    alias da_SteamAPI_ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, uint32 unMilliseconds);
    alias da_SteamAPI_ISteamHTTP_GetHTTPRequestWasTimedOut = bool function(intptr_t instancePtr, HTTPRequestHandle hRequest, bool * pbWasTimedOut);
    alias da_SteamAPI_ISteamUnifiedMessages_SendMethod = ClientUnifiedMessageHandle function(intptr_t instancePtr, const(char)* pchServiceMethod, const void * pRequestBuffer, uint32 unRequestBufferSize, uint64 unContext);
    alias da_SteamAPI_ISteamUnifiedMessages_GetMethodResponseInfo = bool function(intptr_t instancePtr, ClientUnifiedMessageHandle hHandle, uint32 * punResponseSize, EResult * peResult);
    alias da_SteamAPI_ISteamUnifiedMessages_GetMethodResponseData = bool function(intptr_t instancePtr, ClientUnifiedMessageHandle hHandle, void * pResponseBuffer, uint32 unResponseBufferSize, bool bAutoRelease);
    alias da_SteamAPI_ISteamUnifiedMessages_ReleaseMethod = bool function(intptr_t instancePtr, ClientUnifiedMessageHandle hHandle);
    alias da_SteamAPI_ISteamUnifiedMessages_SendNotification = bool function(intptr_t instancePtr, const(char)* pchServiceNotification, const void * pNotificationBuffer, uint32 unNotificationBufferSize);
    alias da_SteamAPI_ISteamController_Init = bool function(intptr_t instancePtr, const(char)* pchAbsolutePathToControllerConfigVDF);
    alias da_SteamAPI_ISteamController_Shutdown = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamController_RunFrame = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamController_GetControllerState = bool function(intptr_t instancePtr, uint32 unControllerIndex, SteamControllerState001_t * pState);
    alias da_SteamAPI_ISteamController_TriggerHapticPulse = void function(intptr_t instancePtr, uint32 unControllerIndex, ESteamControllerPad eTargetPad, ushort usDurationMicroSec);
    alias da_SteamAPI_ISteamController_SetOverrideMode = void function(intptr_t instancePtr, const(char)* pchMode);
    alias da_SteamAPI_ISteamUGC_CreateQueryUserUGCRequest = UGCQueryHandle_t function(intptr_t instancePtr, AccountID_t unAccountID, EUserUGCList eListType, EUGCMatchingUGCType eMatchingUGCType, EUserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32 unPage);
    alias da_SteamAPI_ISteamUGC_CreateQueryAllUGCRequest = UGCQueryHandle_t function(intptr_t instancePtr, EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32 unPage);
    alias da_SteamAPI_ISteamUGC_CreateQueryUGCDetailsRequest = UGCQueryHandle_t function(intptr_t instancePtr, PublishedFileId_t * pvecPublishedFileID, uint32 unNumPublishedFileIDs);
    alias da_SteamAPI_ISteamUGC_SendQueryUGCRequest = SteamAPICall_t function(intptr_t instancePtr, UGCQueryHandle_t handle);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCResult = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, SteamUGCDetails_t * pDetails);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCPreviewURL = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, char * pchURL, uint32 cchURLSize);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCMetadata = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, char * pchMetadata, uint32 cchMetadatasize);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCChildren = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, PublishedFileId_t * pvecPublishedFileID, uint32 cMaxEntries);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCStatistic = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, EItemStatistic eStatType, uint32 * pStatValue);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCNumAdditionalPreviews = uint32 function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCAdditionalPreview = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, uint32 previewIndex, char * pchURLOrVideoID, uint32 cchURLSize, bool * pbIsImage);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCNumKeyValueTags = uint32 function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index);
    alias da_SteamAPI_ISteamUGC_GetQueryUGCKeyValueTag = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 index, uint32 keyValueTagIndex, char * pchKey, uint32 cchKeySize, char * pchValue, uint32 cchValueSize);
    alias da_SteamAPI_ISteamUGC_ReleaseQueryUGCRequest = bool function(intptr_t instancePtr, UGCQueryHandle_t handle);
    alias da_SteamAPI_ISteamUGC_AddRequiredTag = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pTagName);
    alias da_SteamAPI_ISteamUGC_AddExcludedTag = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pTagName);
    alias da_SteamAPI_ISteamUGC_SetReturnKeyValueTags = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnKeyValueTags);
    alias da_SteamAPI_ISteamUGC_SetReturnLongDescription = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnLongDescription);
    alias da_SteamAPI_ISteamUGC_SetReturnMetadata = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnMetadata);
    alias da_SteamAPI_ISteamUGC_SetReturnChildren = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnChildren);
    alias da_SteamAPI_ISteamUGC_SetReturnAdditionalPreviews = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnAdditionalPreviews);
    alias da_SteamAPI_ISteamUGC_SetReturnTotalOnly = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bReturnTotalOnly);
    alias da_SteamAPI_ISteamUGC_SetLanguage = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pchLanguage);
    alias da_SteamAPI_ISteamUGC_SetAllowCachedResponse = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 unMaxAgeSeconds);
    alias da_SteamAPI_ISteamUGC_SetCloudFileNameFilter = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pMatchCloudFileName);
    alias da_SteamAPI_ISteamUGC_SetMatchAnyTag = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, bool bMatchAnyTag);
    alias da_SteamAPI_ISteamUGC_SetSearchText = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pSearchText);
    alias da_SteamAPI_ISteamUGC_SetRankedByTrendDays = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, uint32 unDays);
    alias da_SteamAPI_ISteamUGC_AddRequiredKeyValueTag = bool function(intptr_t instancePtr, UGCQueryHandle_t handle, const(char)* pKey, const(char)* pValue);
    alias da_SteamAPI_ISteamUGC_RequestUGCDetails = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID, uint32 unMaxAgeSeconds);
    alias da_SteamAPI_ISteamUGC_CreateItem = SteamAPICall_t function(intptr_t instancePtr, AppId_t nConsumerAppId, EWorkshopFileType eFileType);
    alias da_SteamAPI_ISteamUGC_StartItemUpdate = UGCUpdateHandle_t function(intptr_t instancePtr, AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_SetItemTitle = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchTitle);
    alias da_SteamAPI_ISteamUGC_SetItemDescription = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchDescription);
    alias da_SteamAPI_ISteamUGC_SetItemUpdateLanguage = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchLanguage);
    alias da_SteamAPI_ISteamUGC_SetItemMetadata = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchMetaData);
    alias da_SteamAPI_ISteamUGC_SetItemVisibility = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility eVisibility);
    alias da_SteamAPI_ISteamUGC_SetItemTags = bool function(intptr_t instancePtr, UGCUpdateHandle_t updateHandle, const SteamParamStringArray_t * pTags);
    alias da_SteamAPI_ISteamUGC_SetItemContent = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pszContentFolder);
    alias da_SteamAPI_ISteamUGC_SetItemPreview = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pszPreviewFile);
    alias da_SteamAPI_ISteamUGC_RemoveItemKeyValueTags = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchKey);
    alias da_SteamAPI_ISteamUGC_AddItemKeyValueTag = bool function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchKey, const(char)* pchValue);
    alias da_SteamAPI_ISteamUGC_SubmitItemUpdate = SteamAPICall_t function(intptr_t instancePtr, UGCUpdateHandle_t handle, const(char)* pchChangeNote);
    alias da_SteamAPI_ISteamUGC_GetItemUpdateProgress = EItemUpdateStatus function(intptr_t instancePtr, UGCUpdateHandle_t handle, uint64 * punBytesProcessed, uint64 * punBytesTotal);
    alias da_SteamAPI_ISteamUGC_SetUserItemVote = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID, bool bVoteUp);
    alias da_SteamAPI_ISteamUGC_GetUserItemVote = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_AddItemToFavorites = SteamAPICall_t function(intptr_t instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_RemoveItemFromFavorites = SteamAPICall_t function(intptr_t instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_SubscribeItem = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_UnsubscribeItem = SteamAPICall_t function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_GetNumSubscribedItems = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamUGC_GetSubscribedItems = uint32 function(intptr_t instancePtr, PublishedFileId_t * pvecPublishedFileID, uint32 cMaxEntries);
    alias da_SteamAPI_ISteamUGC_GetItemState = uint32 function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID);
    alias da_SteamAPI_ISteamUGC_GetItemInstallInfo = bool function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID, uint64 * punSizeOnDisk, char * pchFolder, uint32 cchFolderSize, uint32 * punTimeStamp);
    alias da_SteamAPI_ISteamUGC_GetItemDownloadInfo = bool function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID, uint64 * punBytesDownloaded, uint64 * punBytesTotal);
    alias da_SteamAPI_ISteamUGC_DownloadItem = bool function(intptr_t instancePtr, PublishedFileId_t nPublishedFileID, bool bHighPriority);
    alias da_SteamAPI_ISteamAppList_GetNumInstalledApps = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamAppList_GetInstalledApps = uint32 function(intptr_t instancePtr, AppId_t * pvecAppID, uint32 unMaxAppIDs);
    alias da_SteamAPI_ISteamAppList_GetAppName = int function(intptr_t instancePtr, AppId_t nAppID, char * pchName, int cchNameMax);
    alias da_SteamAPI_ISteamAppList_GetAppInstallDir = int function(intptr_t instancePtr, AppId_t nAppID, char * pchDirectory, int cchNameMax);
    alias da_SteamAPI_ISteamAppList_GetAppBuildId = int function(intptr_t instancePtr, AppId_t nAppID);
    alias da_SteamAPI_ISteamHTMLSurface_DestructISteamHTMLSurface = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamHTMLSurface_Init = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamHTMLSurface_Shutdown = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamHTMLSurface_CreateBrowser = SteamAPICall_t function(intptr_t instancePtr, const(char)* pchUserAgent, const(char)* pchUserCSS);
    alias da_SteamAPI_ISteamHTMLSurface_RemoveBrowser = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_LoadURL = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, const(char)* pchURL, const(char)* pchPostData);
    alias da_SteamAPI_ISteamHTMLSurface_SetSize = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 unWidth, uint32 unHeight);
    alias da_SteamAPI_ISteamHTMLSurface_StopLoad = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_Reload = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_GoBack = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_GoForward = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_AddHeader = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, const(char)* pchKey, const(char)* pchValue);
    alias da_SteamAPI_ISteamHTMLSurface_ExecuteJavascript = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, const(char)* pchScript);
    alias da_SteamAPI_ISteamHTMLSurface_MouseUp = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, ISteamHTMLSurface_EHTMLMouseButton eMouseButton);
    alias da_SteamAPI_ISteamHTMLSurface_MouseDown = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, ISteamHTMLSurface_EHTMLMouseButton eMouseButton);
    alias da_SteamAPI_ISteamHTMLSurface_MouseDoubleClick = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, ISteamHTMLSurface_EHTMLMouseButton eMouseButton);
    alias da_SteamAPI_ISteamHTMLSurface_MouseMove = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, int x, int y);
    alias da_SteamAPI_ISteamHTMLSurface_MouseWheel = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, int32 nDelta);
    alias da_SteamAPI_ISteamHTMLSurface_KeyDown = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 nNativeKeyCode, ISteamHTMLSurface_EHTMLKeyModifiers eHTMLKeyModifiers);
    alias da_SteamAPI_ISteamHTMLSurface_KeyUp = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 nNativeKeyCode, ISteamHTMLSurface_EHTMLKeyModifiers eHTMLKeyModifiers);
    alias da_SteamAPI_ISteamHTMLSurface_KeyChar = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 cUnicodeChar, ISteamHTMLSurface_EHTMLKeyModifiers eHTMLKeyModifiers);
    alias da_SteamAPI_ISteamHTMLSurface_SetHorizontalScroll = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 nAbsolutePixelScroll);
    alias da_SteamAPI_ISteamHTMLSurface_SetVerticalScroll = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, uint32 nAbsolutePixelScroll);
    alias da_SteamAPI_ISteamHTMLSurface_SetKeyFocus = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, bool bHasKeyFocus);
    alias da_SteamAPI_ISteamHTMLSurface_ViewSource = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_CopyToClipboard = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_PasteFromClipboard = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_Find = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, const(char)* pchSearchStr, bool bCurrentlyInFind, bool bReverse);
    alias da_SteamAPI_ISteamHTMLSurface_StopFind = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle);
    alias da_SteamAPI_ISteamHTMLSurface_GetLinkAtPosition = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, int x, int y);
    alias da_SteamAPI_ISteamHTMLSurface_SetCookie = void function(intptr_t instancePtr, const(char)* pchHostname, const(char)* pchKey, const(char)* pchValue, const(char)* pchPath, RTime32 nExpires, bool bSecure, bool bHTTPOnly);
    alias da_SteamAPI_ISteamHTMLSurface_SetPageScaleFactor = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY);
    alias da_SteamAPI_ISteamHTMLSurface_SetBackgroundMode = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, bool bBackgroundMode);
    alias da_SteamAPI_ISteamHTMLSurface_AllowStartRequest = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, bool bAllowed);
    alias da_SteamAPI_ISteamHTMLSurface_JSDialogResponse = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, bool bResult);
    alias da_SteamAPI_ISteamHTMLSurface_FileLoadDialogResponse = void function(intptr_t instancePtr, HHTMLBrowser unBrowserHandle, const(char)** pchSelectedFiles);
    alias da_SteamAPI_ISteamInventory_GetResultStatus = EResult function(intptr_t instancePtr, SteamInventoryResult_t resultHandle);
    alias da_SteamAPI_ISteamInventory_GetResultItems = bool function(intptr_t instancePtr, SteamInventoryResult_t resultHandle, SteamItemDetails_t * pOutItemsArray, uint32 * punOutItemsArraySize);
    alias da_SteamAPI_ISteamInventory_GetResultTimestamp = uint32 function(intptr_t instancePtr, SteamInventoryResult_t resultHandle);
    alias da_SteamAPI_ISteamInventory_CheckResultSteamID = bool function(intptr_t instancePtr, SteamInventoryResult_t resultHandle, CSteamID steamIDExpected);
    alias da_SteamAPI_ISteamInventory_DestroyResult = void function(intptr_t instancePtr, SteamInventoryResult_t resultHandle);
    alias da_SteamAPI_ISteamInventory_GetAllItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle);
    alias da_SteamAPI_ISteamInventory_GetItemsByID = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, const SteamItemInstanceID_t * pInstanceIDs, uint32 unCountInstanceIDs);
    alias da_SteamAPI_ISteamInventory_SerializeResult = bool function(intptr_t instancePtr, SteamInventoryResult_t resultHandle, void * pOutBuffer, uint32 * punOutBufferSize);
    alias da_SteamAPI_ISteamInventory_DeserializeResult = bool function(intptr_t instancePtr, SteamInventoryResult_t * pOutResultHandle, const void * pBuffer, uint32 unBufferSize, bool bRESERVED_MUST_BE_FALSE);
    alias da_SteamAPI_ISteamInventory_GenerateItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, const SteamItemDef_t * pArrayItemDefs, const uint32 * punArrayQuantity, uint32 unArrayLength);
    alias da_SteamAPI_ISteamInventory_GrantPromoItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle);
    alias da_SteamAPI_ISteamInventory_AddPromoItem = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t itemDef);
    alias da_SteamAPI_ISteamInventory_AddPromoItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, const SteamItemDef_t * pArrayItemDefs, uint32 unArrayLength);
    alias da_SteamAPI_ISteamInventory_ConsumeItem = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemInstanceID_t itemConsume, uint32 unQuantity);
    alias da_SteamAPI_ISteamInventory_ExchangeItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, const SteamItemDef_t * pArrayGenerate, const uint32 * punArrayGenerateQuantity, uint32 unArrayGenerateLength, const SteamItemInstanceID_t * pArrayDestroy, const uint32 * punArrayDestroyQuantity, uint32 unArrayDestroyLength);
    alias da_SteamAPI_ISteamInventory_TransferItemQuantity = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemInstanceID_t itemIdSource, uint32 unQuantity, SteamItemInstanceID_t itemIdDest);
    alias da_SteamAPI_ISteamInventory_SendItemDropHeartbeat = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamInventory_TriggerItemDrop = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, SteamItemDef_t dropListDefinition);
    alias da_SteamAPI_ISteamInventory_TradeItems = bool function(intptr_t instancePtr, SteamInventoryResult_t * pResultHandle, CSteamID steamIDTradePartner, const SteamItemInstanceID_t * pArrayGive, const uint32 * pArrayGiveQuantity, uint32 nArrayGiveLength, const SteamItemInstanceID_t * pArrayGet, const uint32 * pArrayGetQuantity, uint32 nArrayGetLength);
    alias da_SteamAPI_ISteamInventory_LoadItemDefinitions = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamInventory_GetItemDefinitionIDs = bool function(intptr_t instancePtr, SteamItemDef_t * pItemDefIDs, uint32 * punItemDefIDsArraySize);
    alias da_SteamAPI_ISteamInventory_GetItemDefinitionProperty = bool function(intptr_t instancePtr, SteamItemDef_t iDefinition, const(char)* pchPropertyName, char * pchValueBuffer, uint32 * punValueBufferSize);
    alias da_SteamAPI_ISteamVideo_GetVideoURL = void function(intptr_t instancePtr, AppId_t unVideoAppID);
    alias da_SteamAPI_ISteamVideo_IsBroadcasting = bool function(intptr_t instancePtr, int * pnNumViewers);
    alias da_SteamAPI_ISteamGameServer_InitGameServer = bool function(intptr_t instancePtr, uint32 unIP, uint16 usGamePort, uint16 usQueryPort, uint32 unFlags, AppId_t nGameAppId, const(char)* pchVersionString);
    alias da_SteamAPI_ISteamGameServer_SetProduct = void function(intptr_t instancePtr, const(char)* pszProduct);
    alias da_SteamAPI_ISteamGameServer_SetGameDescription = void function(intptr_t instancePtr, const(char)* pszGameDescription);
    alias da_SteamAPI_ISteamGameServer_SetModDir = void function(intptr_t instancePtr, const(char)* pszModDir);
    alias da_SteamAPI_ISteamGameServer_SetDedicatedServer = void function(intptr_t instancePtr, bool bDedicated);
    alias da_SteamAPI_ISteamGameServer_LogOn = void function(intptr_t instancePtr, const(char)* pszToken);
    alias da_SteamAPI_ISteamGameServer_LogOnAnonymous = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_LogOff = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_BLoggedOn = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_BSecure = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_GetSteamID = uint64 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_WasRestartRequested = bool function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_SetMaxPlayerCount = void function(intptr_t instancePtr, int cPlayersMax);
    alias da_SteamAPI_ISteamGameServer_SetBotPlayerCount = void function(intptr_t instancePtr, int cBotplayers);
    alias da_SteamAPI_ISteamGameServer_SetServerName = void function(intptr_t instancePtr, const(char)* pszServerName);
    alias da_SteamAPI_ISteamGameServer_SetMapName = void function(intptr_t instancePtr, const(char)* pszMapName);
    alias da_SteamAPI_ISteamGameServer_SetPasswordProtected = void function(intptr_t instancePtr, bool bPasswordProtected);
    alias da_SteamAPI_ISteamGameServer_SetSpectatorPort = void function(intptr_t instancePtr, uint16 unSpectatorPort);
    alias da_SteamAPI_ISteamGameServer_SetSpectatorServerName = void function(intptr_t instancePtr, const(char)* pszSpectatorServerName);
    alias da_SteamAPI_ISteamGameServer_ClearAllKeyValues = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_SetKeyValue = void function(intptr_t instancePtr, const(char)* pKey, const(char)* pValue);
    alias da_SteamAPI_ISteamGameServer_SetGameTags = void function(intptr_t instancePtr, const(char)* pchGameTags);
    alias da_SteamAPI_ISteamGameServer_SetGameData = void function(intptr_t instancePtr, const(char)* pchGameData);
    alias da_SteamAPI_ISteamGameServer_SetRegion = void function(intptr_t instancePtr, const(char)* pszRegion);
    alias da_SteamAPI_ISteamGameServer_SendUserConnectAndAuthenticate = bool function(intptr_t instancePtr, uint32 unIPClient, const void * pvAuthBlob, uint32 cubAuthBlobSize, CSteamID * pSteamIDUser);
    alias da_SteamAPI_ISteamGameServer_CreateUnauthenticatedUserConnection = uint64 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_SendUserDisconnect = void function(intptr_t instancePtr, CSteamID steamIDUser);
    alias da_SteamAPI_ISteamGameServer_BUpdateUserData = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchPlayerName, uint32 uScore);
    alias da_SteamAPI_ISteamGameServer_GetAuthSessionTicket = HAuthTicket function(intptr_t instancePtr, void * pTicket, int cbMaxTicket, uint32 * pcbTicket);
    alias da_SteamAPI_ISteamGameServer_BeginAuthSession = EBeginAuthSessionResult function(intptr_t instancePtr, const void * pAuthTicket, int cbAuthTicket, CSteamID steamID);
    alias da_SteamAPI_ISteamGameServer_EndAuthSession = void function(intptr_t instancePtr, CSteamID steamID);
    alias da_SteamAPI_ISteamGameServer_CancelAuthTicket = void function(intptr_t instancePtr, HAuthTicket hAuthTicket);
    alias da_SteamAPI_ISteamGameServer_UserHasLicenseForApp = EUserHasLicenseForAppResult function(intptr_t instancePtr, CSteamID steamID, AppId_t appID);
    alias da_SteamAPI_ISteamGameServer_RequestUserGroupStatus = bool function(intptr_t instancePtr, CSteamID steamIDUser, CSteamID steamIDGroup);
    alias da_SteamAPI_ISteamGameServer_GetGameplayStats = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_GetServerReputation = SteamAPICall_t function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_GetPublicIP = uint32 function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_HandleIncomingPacket = bool function(intptr_t instancePtr, const void * pData, int cbData, uint32 srcIP, uint16 srcPort);
    alias da_SteamAPI_ISteamGameServer_GetNextOutgoingPacket = int function(intptr_t instancePtr, void * pOut, int cbMaxOut, uint32 * pNetAdr, uint16 * pPort);
    alias da_SteamAPI_ISteamGameServer_EnableHeartbeats = void function(intptr_t instancePtr, bool bActive);
    alias da_SteamAPI_ISteamGameServer_SetHeartbeatInterval = void function(intptr_t instancePtr, int iHeartbeatInterval);
    alias da_SteamAPI_ISteamGameServer_ForceHeartbeat = void function(intptr_t instancePtr);
    alias da_SteamAPI_ISteamGameServer_AssociateWithClan = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDClan);
    alias da_SteamAPI_ISteamGameServer_ComputeNewPlayerCompatibility = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDNewPlayer);
    alias da_SteamAPI_ISteamGameServerStats_RequestUserStats = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDUser);
    alias da_SteamAPI_ISteamGameServerStats_GetUserStat = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, int32 * pData);
    alias da_SteamAPI_ISteamGameServerStats_GetUserStat0 = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, float * pData);
    alias da_SteamAPI_ISteamGameServerStats_GetUserAchievement = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, bool * pbAchieved);
    alias da_SteamAPI_ISteamGameServerStats_SetUserStat = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, int32 nData);
    alias da_SteamAPI_ISteamGameServerStats_SetUserStat0 = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, float fData);
    alias da_SteamAPI_ISteamGameServerStats_UpdateUserAvgRateStat = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName, float flCountThisSession, double dSessionLength);
    alias da_SteamAPI_ISteamGameServerStats_SetUserAchievement = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName);
    alias da_SteamAPI_ISteamGameServerStats_ClearUserAchievement = bool function(intptr_t instancePtr, CSteamID steamIDUser, const(char)* pchName);
    alias da_SteamAPI_ISteamGameServerStats_StoreUserStats = SteamAPICall_t function(intptr_t instancePtr, CSteamID steamIDUser);
}

__gshared
{
    da_SteamAPI_Init SteamAPI_Init;
    da_SteamAPI_Shutdown SteamAPI_Shutdown;
    da_SteamAPI_IsSteamRunning SteamAPI_IsSteamRunning;
    da_SteamClient SteamClient;

    da_SteamAPI_ISteamClient_CreateSteamPipe SteamAPI_ISteamClient_CreateSteamPipe;
    da_SteamAPI_ISteamClient_BReleaseSteamPipe SteamAPI_ISteamClient_BReleaseSteamPipe;
    da_SteamAPI_ISteamClient_ConnectToGlobalUser SteamAPI_ISteamClient_ConnectToGlobalUser;
    da_SteamAPI_ISteamClient_CreateLocalUser SteamAPI_ISteamClient_CreateLocalUser;
    da_SteamAPI_ISteamClient_ReleaseUser SteamAPI_ISteamClient_ReleaseUser;
    da_SteamAPI_ISteamClient_GetISteamUser SteamAPI_ISteamClient_GetISteamUser;
    da_SteamAPI_ISteamClient_GetISteamGameServer SteamAPI_ISteamClient_GetISteamGameServer;
    da_SteamAPI_ISteamClient_SetLocalIPBinding SteamAPI_ISteamClient_SetLocalIPBinding;
    da_SteamAPI_ISteamClient_GetISteamFriends SteamAPI_ISteamClient_GetISteamFriends;
    da_SteamAPI_ISteamClient_GetISteamUtils SteamAPI_ISteamClient_GetISteamUtils;
    da_SteamAPI_ISteamClient_GetISteamMatchmaking SteamAPI_ISteamClient_GetISteamMatchmaking;
    da_SteamAPI_ISteamClient_GetISteamMatchmakingServers SteamAPI_ISteamClient_GetISteamMatchmakingServers;
    da_SteamAPI_ISteamClient_GetISteamGenericInterface SteamAPI_ISteamClient_GetISteamGenericInterface;
    da_SteamAPI_ISteamClient_GetISteamUserStats SteamAPI_ISteamClient_GetISteamUserStats;
    da_SteamAPI_ISteamClient_GetISteamGameServerStats SteamAPI_ISteamClient_GetISteamGameServerStats;
    da_SteamAPI_ISteamClient_GetISteamApps SteamAPI_ISteamClient_GetISteamApps;
    da_SteamAPI_ISteamClient_GetISteamNetworking SteamAPI_ISteamClient_GetISteamNetworking;
    da_SteamAPI_ISteamClient_GetISteamRemoteStorage SteamAPI_ISteamClient_GetISteamRemoteStorage;
    da_SteamAPI_ISteamClient_GetISteamScreenshots SteamAPI_ISteamClient_GetISteamScreenshots;
    da_SteamAPI_ISteamClient_RunFrame SteamAPI_ISteamClient_RunFrame;
    da_SteamAPI_ISteamClient_GetIPCCallCount SteamAPI_ISteamClient_GetIPCCallCount;
    da_SteamAPI_ISteamClient_SetWarningMessageHook SteamAPI_ISteamClient_SetWarningMessageHook;
    da_SteamAPI_ISteamClient_BShutdownIfAllPipesClosed SteamAPI_ISteamClient_BShutdownIfAllPipesClosed;
    da_SteamAPI_ISteamClient_GetISteamHTTP SteamAPI_ISteamClient_GetISteamHTTP;
    da_SteamAPI_ISteamClient_GetISteamUnifiedMessages SteamAPI_ISteamClient_GetISteamUnifiedMessages;
    da_SteamAPI_ISteamClient_GetISteamController SteamAPI_ISteamClient_GetISteamController;
    da_SteamAPI_ISteamClient_GetISteamUGC SteamAPI_ISteamClient_GetISteamUGC;
    da_SteamAPI_ISteamClient_GetISteamAppList SteamAPI_ISteamClient_GetISteamAppList;
    da_SteamAPI_ISteamClient_GetISteamMusic SteamAPI_ISteamClient_GetISteamMusic;
    da_SteamAPI_ISteamClient_GetISteamMusicRemote SteamAPI_ISteamClient_GetISteamMusicRemote;
    da_SteamAPI_ISteamClient_GetISteamHTMLSurface SteamAPI_ISteamClient_GetISteamHTMLSurface;
    da_SteamAPI_ISteamClient_Set_SteamAPI_CPostAPIResultInProcess SteamAPI_ISteamClient_Set_SteamAPI_CPostAPIResultInProcess;
    da_SteamAPI_ISteamClient_Remove_SteamAPI_CPostAPIResultInProcess SteamAPI_ISteamClient_Remove_SteamAPI_CPostAPIResultInProcess;
    da_SteamAPI_ISteamClient_Set_SteamAPI_CCheckCallbackRegisteredInProcess SteamAPI_ISteamClient_Set_SteamAPI_CCheckCallbackRegisteredInProcess;
    da_SteamAPI_ISteamClient_GetISteamInventory SteamAPI_ISteamClient_GetISteamInventory;
    da_SteamAPI_ISteamClient_GetISteamVideo SteamAPI_ISteamClient_GetISteamVideo;
    
    da_SteamAPI_ISteamUser_GetHSteamUser SteamAPI_ISteamUser_GetHSteamUser;
    da_SteamAPI_ISteamUser_BLoggedOn SteamAPI_ISteamUser_BLoggedOn;
    da_SteamAPI_ISteamUser_GetSteamID SteamAPI_ISteamUser_GetSteamID;
    da_SteamAPI_ISteamUser_InitiateGameConnection SteamAPI_ISteamUser_InitiateGameConnection;
    da_SteamAPI_ISteamUser_TerminateGameConnection SteamAPI_ISteamUser_TerminateGameConnection;
    da_SteamAPI_ISteamUser_TrackAppUsageEvent SteamAPI_ISteamUser_TrackAppUsageEvent;
    da_SteamAPI_ISteamUser_GetUserDataFolder SteamAPI_ISteamUser_GetUserDataFolder;
    da_SteamAPI_ISteamUser_StartVoiceRecording SteamAPI_ISteamUser_StartVoiceRecording;
    da_SteamAPI_ISteamUser_StopVoiceRecording SteamAPI_ISteamUser_StopVoiceRecording;
    da_SteamAPI_ISteamUser_GetAvailableVoice SteamAPI_ISteamUser_GetAvailableVoice;
    da_SteamAPI_ISteamUser_GetVoice SteamAPI_ISteamUser_GetVoice;
    da_SteamAPI_ISteamUser_DecompressVoice SteamAPI_ISteamUser_DecompressVoice;
    da_SteamAPI_ISteamUser_GetVoiceOptimalSampleRate SteamAPI_ISteamUser_GetVoiceOptimalSampleRate;
    da_SteamAPI_ISteamUser_GetAuthSessionTicket SteamAPI_ISteamUser_GetAuthSessionTicket;
    da_SteamAPI_ISteamUser_BeginAuthSession SteamAPI_ISteamUser_BeginAuthSession;
    da_SteamAPI_ISteamUser_EndAuthSession SteamAPI_ISteamUser_EndAuthSession;
    da_SteamAPI_ISteamUser_CancelAuthTicket SteamAPI_ISteamUser_CancelAuthTicket;
    da_SteamAPI_ISteamUser_UserHasLicenseForApp SteamAPI_ISteamUser_UserHasLicenseForApp;
    da_SteamAPI_ISteamUser_BIsBehindNAT SteamAPI_ISteamUser_BIsBehindNAT;
    da_SteamAPI_ISteamUser_AdvertiseGame SteamAPI_ISteamUser_AdvertiseGame;
    da_SteamAPI_ISteamUser_RequestEncryptedAppTicket SteamAPI_ISteamUser_RequestEncryptedAppTicket;
    da_SteamAPI_ISteamUser_GetEncryptedAppTicket SteamAPI_ISteamUser_GetEncryptedAppTicket;
    da_SteamAPI_ISteamUser_GetGameBadgeLevel SteamAPI_ISteamUser_GetGameBadgeLevel;
    da_SteamAPI_ISteamUser_GetPlayerSteamLevel SteamAPI_ISteamUser_GetPlayerSteamLevel;
    da_SteamAPI_ISteamUser_RequestStoreAuthURL SteamAPI_ISteamUser_RequestStoreAuthURL;

    da_SteamAPI_ISteamFriends_GetPersonaName SteamAPI_ISteamFriends_GetPersonaName;
    da_SteamAPI_ISteamFriends_SetPersonaName SteamAPI_ISteamFriends_SetPersonaName;
    da_SteamAPI_ISteamFriends_GetPersonaState SteamAPI_ISteamFriends_GetPersonaState;
    da_SteamAPI_ISteamFriends_GetFriendCount SteamAPI_ISteamFriends_GetFriendCount;
    da_SteamAPI_ISteamFriends_GetFriendByIndex SteamAPI_ISteamFriends_GetFriendByIndex;
    da_SteamAPI_ISteamFriends_GetFriendRelationship SteamAPI_ISteamFriends_GetFriendRelationship;
    da_SteamAPI_ISteamFriends_GetFriendPersonaState SteamAPI_ISteamFriends_GetFriendPersonaState;
    da_SteamAPI_ISteamFriends_GetFriendPersonaName SteamAPI_ISteamFriends_GetFriendPersonaName;
    da_SteamAPI_ISteamFriends_GetFriendGamePlayed SteamAPI_ISteamFriends_GetFriendGamePlayed;
    da_SteamAPI_ISteamFriends_GetFriendPersonaNameHistory SteamAPI_ISteamFriends_GetFriendPersonaNameHistory;
    da_SteamAPI_ISteamFriends_GetFriendSteamLevel SteamAPI_ISteamFriends_GetFriendSteamLevel;
    da_SteamAPI_ISteamFriends_GetPlayerNickname SteamAPI_ISteamFriends_GetPlayerNickname;
    da_SteamAPI_ISteamFriends_GetFriendsGroupCount SteamAPI_ISteamFriends_GetFriendsGroupCount;
    da_SteamAPI_ISteamFriends_GetFriendsGroupIDByIndex SteamAPI_ISteamFriends_GetFriendsGroupIDByIndex;
    da_SteamAPI_ISteamFriends_GetFriendsGroupName SteamAPI_ISteamFriends_GetFriendsGroupName;
    da_SteamAPI_ISteamFriends_GetFriendsGroupMembersCount SteamAPI_ISteamFriends_GetFriendsGroupMembersCount;
    da_SteamAPI_ISteamFriends_GetFriendsGroupMembersList SteamAPI_ISteamFriends_GetFriendsGroupMembersList;
    da_SteamAPI_ISteamFriends_HasFriend SteamAPI_ISteamFriends_HasFriend;
    da_SteamAPI_ISteamFriends_GetClanCount SteamAPI_ISteamFriends_GetClanCount;
    da_SteamAPI_ISteamFriends_GetClanByIndex SteamAPI_ISteamFriends_GetClanByIndex;
    da_SteamAPI_ISteamFriends_GetClanName SteamAPI_ISteamFriends_GetClanName;
    da_SteamAPI_ISteamFriends_GetClanTag SteamAPI_ISteamFriends_GetClanTag;
    da_SteamAPI_ISteamFriends_GetClanActivityCounts SteamAPI_ISteamFriends_GetClanActivityCounts;
    da_SteamAPI_ISteamFriends_DownloadClanActivityCounts SteamAPI_ISteamFriends_DownloadClanActivityCounts;
    da_SteamAPI_ISteamFriends_GetFriendCountFromSource SteamAPI_ISteamFriends_GetFriendCountFromSource;
    da_SteamAPI_ISteamFriends_GetFriendFromSourceByIndex SteamAPI_ISteamFriends_GetFriendFromSourceByIndex;
    da_SteamAPI_ISteamFriends_IsUserInSource SteamAPI_ISteamFriends_IsUserInSource;
    da_SteamAPI_ISteamFriends_SetInGameVoiceSpeaking SteamAPI_ISteamFriends_SetInGameVoiceSpeaking;
    da_SteamAPI_ISteamFriends_ActivateGameOverlay SteamAPI_ISteamFriends_ActivateGameOverlay;
    da_SteamAPI_ISteamFriends_ActivateGameOverlayToUser SteamAPI_ISteamFriends_ActivateGameOverlayToUser;
    da_SteamAPI_ISteamFriends_ActivateGameOverlayToWebPage SteamAPI_ISteamFriends_ActivateGameOverlayToWebPage;
    da_SteamAPI_ISteamFriends_ActivateGameOverlayToStore SteamAPI_ISteamFriends_ActivateGameOverlayToStore;
    da_SteamAPI_ISteamFriends_SetPlayedWith SteamAPI_ISteamFriends_SetPlayedWith;
    da_SteamAPI_ISteamFriends_ActivateGameOverlayInviteDialog SteamAPI_ISteamFriends_ActivateGameOverlayInviteDialog;
    da_SteamAPI_ISteamFriends_GetSmallFriendAvatar SteamAPI_ISteamFriends_GetSmallFriendAvatar;
    da_SteamAPI_ISteamFriends_GetMediumFriendAvatar SteamAPI_ISteamFriends_GetMediumFriendAvatar;
    da_SteamAPI_ISteamFriends_GetLargeFriendAvatar SteamAPI_ISteamFriends_GetLargeFriendAvatar;
    da_SteamAPI_ISteamFriends_RequestUserInformation SteamAPI_ISteamFriends_RequestUserInformation;
    da_SteamAPI_ISteamFriends_RequestClanOfficerList SteamAPI_ISteamFriends_RequestClanOfficerList;
    da_SteamAPI_ISteamFriends_GetClanOwner SteamAPI_ISteamFriends_GetClanOwner;
    da_SteamAPI_ISteamFriends_GetClanOfficerCount SteamAPI_ISteamFriends_GetClanOfficerCount;
    da_SteamAPI_ISteamFriends_GetClanOfficerByIndex SteamAPI_ISteamFriends_GetClanOfficerByIndex;
    da_SteamAPI_ISteamFriends_GetUserRestrictions SteamAPI_ISteamFriends_GetUserRestrictions;
    da_SteamAPI_ISteamFriends_SetRichPresence SteamAPI_ISteamFriends_SetRichPresence;
    da_SteamAPI_ISteamFriends_ClearRichPresence SteamAPI_ISteamFriends_ClearRichPresence;
    da_SteamAPI_ISteamFriends_GetFriendRichPresence SteamAPI_ISteamFriends_GetFriendRichPresence;
    da_SteamAPI_ISteamFriends_GetFriendRichPresenceKeyCount SteamAPI_ISteamFriends_GetFriendRichPresenceKeyCount;
    da_SteamAPI_ISteamFriends_GetFriendRichPresenceKeyByIndex SteamAPI_ISteamFriends_GetFriendRichPresenceKeyByIndex;
    da_SteamAPI_ISteamFriends_RequestFriendRichPresence SteamAPI_ISteamFriends_RequestFriendRichPresence;
    da_SteamAPI_ISteamFriends_InviteUserToGame SteamAPI_ISteamFriends_InviteUserToGame;
    da_SteamAPI_ISteamFriends_GetCoplayFriendCount SteamAPI_ISteamFriends_GetCoplayFriendCount;
    da_SteamAPI_ISteamFriends_GetCoplayFriend SteamAPI_ISteamFriends_GetCoplayFriend;
    da_SteamAPI_ISteamFriends_GetFriendCoplayTime SteamAPI_ISteamFriends_GetFriendCoplayTime;
    da_SteamAPI_ISteamFriends_GetFriendCoplayGame SteamAPI_ISteamFriends_GetFriendCoplayGame;
    da_SteamAPI_ISteamFriends_JoinClanChatRoom SteamAPI_ISteamFriends_JoinClanChatRoom;
    da_SteamAPI_ISteamFriends_LeaveClanChatRoom SteamAPI_ISteamFriends_LeaveClanChatRoom;
    da_SteamAPI_ISteamFriends_GetClanChatMemberCount SteamAPI_ISteamFriends_GetClanChatMemberCount;
    da_SteamAPI_ISteamFriends_GetChatMemberByIndex SteamAPI_ISteamFriends_GetChatMemberByIndex;
    da_SteamAPI_ISteamFriends_SendClanChatMessage SteamAPI_ISteamFriends_SendClanChatMessage;
    da_SteamAPI_ISteamFriends_GetClanChatMessage SteamAPI_ISteamFriends_GetClanChatMessage;
    da_SteamAPI_ISteamFriends_IsClanChatAdmin SteamAPI_ISteamFriends_IsClanChatAdmin;
    da_SteamAPI_ISteamFriends_IsClanChatWindowOpenInSteam SteamAPI_ISteamFriends_IsClanChatWindowOpenInSteam;
    da_SteamAPI_ISteamFriends_OpenClanChatWindowInSteam SteamAPI_ISteamFriends_OpenClanChatWindowInSteam;
    da_SteamAPI_ISteamFriends_CloseClanChatWindowInSteam SteamAPI_ISteamFriends_CloseClanChatWindowInSteam;
    da_SteamAPI_ISteamFriends_SetListenForFriendsMessages SteamAPI_ISteamFriends_SetListenForFriendsMessages;
    da_SteamAPI_ISteamFriends_ReplyToFriendMessage SteamAPI_ISteamFriends_ReplyToFriendMessage;
    da_SteamAPI_ISteamFriends_GetFriendMessage SteamAPI_ISteamFriends_GetFriendMessage;
    da_SteamAPI_ISteamFriends_GetFollowerCount SteamAPI_ISteamFriends_GetFollowerCount;
    da_SteamAPI_ISteamFriends_IsFollowing SteamAPI_ISteamFriends_IsFollowing;
    da_SteamAPI_ISteamFriends_EnumerateFollowingList SteamAPI_ISteamFriends_EnumerateFollowingList;

    da_SteamAPI_ISteamUtils_GetSecondsSinceAppActive SteamAPI_ISteamUtils_GetSecondsSinceAppActive;
    da_SteamAPI_ISteamUtils_GetSecondsSinceComputerActive SteamAPI_ISteamUtils_GetSecondsSinceComputerActive;
    da_SteamAPI_ISteamUtils_GetConnectedUniverse SteamAPI_ISteamUtils_GetConnectedUniverse;
    da_SteamAPI_ISteamUtils_GetServerRealTime SteamAPI_ISteamUtils_GetServerRealTime;
    da_SteamAPI_ISteamUtils_GetIPCountry SteamAPI_ISteamUtils_GetIPCountry;
    da_SteamAPI_ISteamUtils_GetImageSize SteamAPI_ISteamUtils_GetImageSize;
    da_SteamAPI_ISteamUtils_GetImageRGBA SteamAPI_ISteamUtils_GetImageRGBA;
    da_SteamAPI_ISteamUtils_GetCSERIPPort SteamAPI_ISteamUtils_GetCSERIPPort;
    da_SteamAPI_ISteamUtils_GetCurrentBatteryPower SteamAPI_ISteamUtils_GetCurrentBatteryPower;
    da_SteamAPI_ISteamUtils_GetAppID SteamAPI_ISteamUtils_GetAppID;
    da_SteamAPI_ISteamUtils_SetOverlayNotificationPosition SteamAPI_ISteamUtils_SetOverlayNotificationPosition;
    da_SteamAPI_ISteamUtils_IsAPICallCompleted SteamAPI_ISteamUtils_IsAPICallCompleted;
    da_SteamAPI_ISteamUtils_GetAPICallFailureReason SteamAPI_ISteamUtils_GetAPICallFailureReason;
    da_SteamAPI_ISteamUtils_GetAPICallResult SteamAPI_ISteamUtils_GetAPICallResult;
    da_SteamAPI_ISteamUtils_RunFrame SteamAPI_ISteamUtils_RunFrame;
    da_SteamAPI_ISteamUtils_GetIPCCallCount SteamAPI_ISteamUtils_GetIPCCallCount;
    da_SteamAPI_ISteamUtils_SetWarningMessageHook SteamAPI_ISteamUtils_SetWarningMessageHook;
    da_SteamAPI_ISteamUtils_IsOverlayEnabled SteamAPI_ISteamUtils_IsOverlayEnabled;
    da_SteamAPI_ISteamUtils_BOverlayNeedsPresent SteamAPI_ISteamUtils_BOverlayNeedsPresent;
    da_SteamAPI_ISteamUtils_CheckFileSignature SteamAPI_ISteamUtils_CheckFileSignature;
    da_SteamAPI_ISteamUtils_ShowGamepadTextInput SteamAPI_ISteamUtils_ShowGamepadTextInput;
    da_SteamAPI_ISteamUtils_GetEnteredGamepadTextLength SteamAPI_ISteamUtils_GetEnteredGamepadTextLength;
    da_SteamAPI_ISteamUtils_GetEnteredGamepadTextInput SteamAPI_ISteamUtils_GetEnteredGamepadTextInput;
    da_SteamAPI_ISteamUtils_GetSteamUILanguage SteamAPI_ISteamUtils_GetSteamUILanguage;
    da_SteamAPI_ISteamUtils_IsSteamRunningInVR SteamAPI_ISteamUtils_IsSteamRunningInVR;
    da_SteamAPI_ISteamUtils_SetOverlayNotificationInset SteamAPI_ISteamUtils_SetOverlayNotificationInset;

    da_SteamAPI_ISteamMatchmaking_GetFavoriteGameCount SteamAPI_ISteamMatchmaking_GetFavoriteGameCount;
    da_SteamAPI_ISteamMatchmaking_GetFavoriteGame SteamAPI_ISteamMatchmaking_GetFavoriteGame;
    da_SteamAPI_ISteamMatchmaking_AddFavoriteGame SteamAPI_ISteamMatchmaking_AddFavoriteGame;
    da_SteamAPI_ISteamMatchmaking_RemoveFavoriteGame SteamAPI_ISteamMatchmaking_RemoveFavoriteGame;
    da_SteamAPI_ISteamMatchmaking_RequestLobbyList SteamAPI_ISteamMatchmaking_RequestLobbyList;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListStringFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListStringFilter;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListNumericalFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListNumericalFilter;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListNearValueFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListNearValueFilter;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable SteamAPI_ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListDistanceFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListDistanceFilter;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListResultCountFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListResultCountFilter;
    da_SteamAPI_ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter SteamAPI_ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter;
    da_SteamAPI_ISteamMatchmaking_GetLobbyByIndex SteamAPI_ISteamMatchmaking_GetLobbyByIndex;
    da_SteamAPI_ISteamMatchmaking_CreateLobby SteamAPI_ISteamMatchmaking_CreateLobby;
    da_SteamAPI_ISteamMatchmaking_JoinLobby SteamAPI_ISteamMatchmaking_JoinLobby;
    da_SteamAPI_ISteamMatchmaking_LeaveLobby SteamAPI_ISteamMatchmaking_LeaveLobby;
    da_SteamAPI_ISteamMatchmaking_InviteUserToLobby SteamAPI_ISteamMatchmaking_InviteUserToLobby;
    da_SteamAPI_ISteamMatchmaking_GetNumLobbyMembers SteamAPI_ISteamMatchmaking_GetNumLobbyMembers;
    da_SteamAPI_ISteamMatchmaking_GetLobbyMemberByIndex SteamAPI_ISteamMatchmaking_GetLobbyMemberByIndex;
    da_SteamAPI_ISteamMatchmaking_GetLobbyData SteamAPI_ISteamMatchmaking_GetLobbyData;
    da_SteamAPI_ISteamMatchmaking_SetLobbyData SteamAPI_ISteamMatchmaking_SetLobbyData;
    da_SteamAPI_ISteamMatchmaking_GetLobbyDataCount SteamAPI_ISteamMatchmaking_GetLobbyDataCount;
    da_SteamAPI_ISteamMatchmaking_GetLobbyDataByIndex SteamAPI_ISteamMatchmaking_GetLobbyDataByIndex;
    da_SteamAPI_ISteamMatchmaking_DeleteLobbyData SteamAPI_ISteamMatchmaking_DeleteLobbyData;
    da_SteamAPI_ISteamMatchmaking_GetLobbyMemberData SteamAPI_ISteamMatchmaking_GetLobbyMemberData;
    da_SteamAPI_ISteamMatchmaking_SetLobbyMemberData SteamAPI_ISteamMatchmaking_SetLobbyMemberData;
    da_SteamAPI_ISteamMatchmaking_SendLobbyChatMsg SteamAPI_ISteamMatchmaking_SendLobbyChatMsg;
    da_SteamAPI_ISteamMatchmaking_GetLobbyChatEntry SteamAPI_ISteamMatchmaking_GetLobbyChatEntry;
    da_SteamAPI_ISteamMatchmaking_RequestLobbyData SteamAPI_ISteamMatchmaking_RequestLobbyData;
    da_SteamAPI_ISteamMatchmaking_SetLobbyGameServer SteamAPI_ISteamMatchmaking_SetLobbyGameServer;
    da_SteamAPI_ISteamMatchmaking_GetLobbyGameServer SteamAPI_ISteamMatchmaking_GetLobbyGameServer;
    da_SteamAPI_ISteamMatchmaking_SetLobbyMemberLimit SteamAPI_ISteamMatchmaking_SetLobbyMemberLimit;
    da_SteamAPI_ISteamMatchmaking_GetLobbyMemberLimit SteamAPI_ISteamMatchmaking_GetLobbyMemberLimit;
    da_SteamAPI_ISteamMatchmaking_SetLobbyType SteamAPI_ISteamMatchmaking_SetLobbyType;
    da_SteamAPI_ISteamMatchmaking_SetLobbyJoinable SteamAPI_ISteamMatchmaking_SetLobbyJoinable;
    da_SteamAPI_ISteamMatchmaking_GetLobbyOwner SteamAPI_ISteamMatchmaking_GetLobbyOwner;
    da_SteamAPI_ISteamMatchmaking_SetLobbyOwner SteamAPI_ISteamMatchmaking_SetLobbyOwner;
    da_SteamAPI_ISteamMatchmaking_SetLinkedLobby SteamAPI_ISteamMatchmaking_SetLinkedLobby;
    da_SteamAPI_ISteamMatchmakingServerListResponse_ServerResponded SteamAPI_ISteamMatchmakingServerListResponse_ServerResponded;
    da_SteamAPI_ISteamMatchmakingServerListResponse_ServerFailedToRespond SteamAPI_ISteamMatchmakingServerListResponse_ServerFailedToRespond;
    da_SteamAPI_ISteamMatchmakingServerListResponse_RefreshComplete SteamAPI_ISteamMatchmakingServerListResponse_RefreshComplete;
    da_SteamAPI_ISteamMatchmakingPingResponse_ServerResponded SteamAPI_ISteamMatchmakingPingResponse_ServerResponded;
    da_SteamAPI_ISteamMatchmakingPingResponse_ServerFailedToRespond SteamAPI_ISteamMatchmakingPingResponse_ServerFailedToRespond;
    da_SteamAPI_ISteamMatchmakingPlayersResponse_AddPlayerToList SteamAPI_ISteamMatchmakingPlayersResponse_AddPlayerToList;
    da_SteamAPI_ISteamMatchmakingPlayersResponse_PlayersFailedToRespond SteamAPI_ISteamMatchmakingPlayersResponse_PlayersFailedToRespond;
    da_SteamAPI_ISteamMatchmakingPlayersResponse_PlayersRefreshComplete SteamAPI_ISteamMatchmakingPlayersResponse_PlayersRefreshComplete;
    da_SteamAPI_ISteamMatchmakingRulesResponse_RulesResponded SteamAPI_ISteamMatchmakingRulesResponse_RulesResponded;
    da_SteamAPI_ISteamMatchmakingRulesResponse_RulesFailedToRespond SteamAPI_ISteamMatchmakingRulesResponse_RulesFailedToRespond;
    da_SteamAPI_ISteamMatchmakingRulesResponse_RulesRefreshComplete SteamAPI_ISteamMatchmakingRulesResponse_RulesRefreshComplete;
    da_SteamAPI_ISteamMatchmakingServers_RequestInternetServerList SteamAPI_ISteamMatchmakingServers_RequestInternetServerList;
    da_SteamAPI_ISteamMatchmakingServers_RequestLANServerList SteamAPI_ISteamMatchmakingServers_RequestLANServerList;
    da_SteamAPI_ISteamMatchmakingServers_RequestFriendsServerList SteamAPI_ISteamMatchmakingServers_RequestFriendsServerList;
    da_SteamAPI_ISteamMatchmakingServers_RequestFavoritesServerList SteamAPI_ISteamMatchmakingServers_RequestFavoritesServerList;
    da_SteamAPI_ISteamMatchmakingServers_RequestHistoryServerList SteamAPI_ISteamMatchmakingServers_RequestHistoryServerList;
    da_SteamAPI_ISteamMatchmakingServers_RequestSpectatorServerList SteamAPI_ISteamMatchmakingServers_RequestSpectatorServerList;
    da_SteamAPI_ISteamMatchmakingServers_ReleaseRequest SteamAPI_ISteamMatchmakingServers_ReleaseRequest;
    da_SteamAPI_ISteamMatchmakingServers_GetServerDetails SteamAPI_ISteamMatchmakingServers_GetServerDetails;
    da_SteamAPI_ISteamMatchmakingServers_CancelQuery SteamAPI_ISteamMatchmakingServers_CancelQuery;
    da_SteamAPI_ISteamMatchmakingServers_RefreshQuery SteamAPI_ISteamMatchmakingServers_RefreshQuery;
    da_SteamAPI_ISteamMatchmakingServers_IsRefreshing SteamAPI_ISteamMatchmakingServers_IsRefreshing;
    da_SteamAPI_ISteamMatchmakingServers_GetServerCount SteamAPI_ISteamMatchmakingServers_GetServerCount;
    da_SteamAPI_ISteamMatchmakingServers_RefreshServer SteamAPI_ISteamMatchmakingServers_RefreshServer;
    da_SteamAPI_ISteamMatchmakingServers_PingServer SteamAPI_ISteamMatchmakingServers_PingServer;
    da_SteamAPI_ISteamMatchmakingServers_PlayerDetails SteamAPI_ISteamMatchmakingServers_PlayerDetails;
    da_SteamAPI_ISteamMatchmakingServers_ServerRules SteamAPI_ISteamMatchmakingServers_ServerRules;
    da_SteamAPI_ISteamMatchmakingServers_CancelServerQuery SteamAPI_ISteamMatchmakingServers_CancelServerQuery;

    da_SteamAPI_ISteamRemoteStorage_FileWrite SteamAPI_ISteamRemoteStorage_FileWrite;
    da_SteamAPI_ISteamRemoteStorage_FileRead SteamAPI_ISteamRemoteStorage_FileRead;
    da_SteamAPI_ISteamRemoteStorage_FileForget SteamAPI_ISteamRemoteStorage_FileForget;
    da_SteamAPI_ISteamRemoteStorage_FileDelete SteamAPI_ISteamRemoteStorage_FileDelete;
    da_SteamAPI_ISteamRemoteStorage_FileShare SteamAPI_ISteamRemoteStorage_FileShare;
    da_SteamAPI_ISteamRemoteStorage_SetSyncPlatforms SteamAPI_ISteamRemoteStorage_SetSyncPlatforms;
    da_SteamAPI_ISteamRemoteStorage_FileWriteStreamOpen SteamAPI_ISteamRemoteStorage_FileWriteStreamOpen;
    da_SteamAPI_ISteamRemoteStorage_FileWriteStreamWriteChunk SteamAPI_ISteamRemoteStorage_FileWriteStreamWriteChunk;
    da_SteamAPI_ISteamRemoteStorage_FileWriteStreamClose SteamAPI_ISteamRemoteStorage_FileWriteStreamClose;
    da_SteamAPI_ISteamRemoteStorage_FileWriteStreamCancel SteamAPI_ISteamRemoteStorage_FileWriteStreamCancel;
    da_SteamAPI_ISteamRemoteStorage_FileExists SteamAPI_ISteamRemoteStorage_FileExists;
    da_SteamAPI_ISteamRemoteStorage_FilePersisted SteamAPI_ISteamRemoteStorage_FilePersisted;
    da_SteamAPI_ISteamRemoteStorage_GetFileSize SteamAPI_ISteamRemoteStorage_GetFileSize;
    da_SteamAPI_ISteamRemoteStorage_GetFileTimestamp SteamAPI_ISteamRemoteStorage_GetFileTimestamp;
    da_SteamAPI_ISteamRemoteStorage_GetSyncPlatforms SteamAPI_ISteamRemoteStorage_GetSyncPlatforms;
    da_SteamAPI_ISteamRemoteStorage_GetFileCount SteamAPI_ISteamRemoteStorage_GetFileCount;
    da_SteamAPI_ISteamRemoteStorage_GetFileNameAndSize SteamAPI_ISteamRemoteStorage_GetFileNameAndSize;
    da_SteamAPI_ISteamRemoteStorage_GetQuota SteamAPI_ISteamRemoteStorage_GetQuota;
    da_SteamAPI_ISteamRemoteStorage_IsCloudEnabledForAccount SteamAPI_ISteamRemoteStorage_IsCloudEnabledForAccount;
    da_SteamAPI_ISteamRemoteStorage_IsCloudEnabledForApp SteamAPI_ISteamRemoteStorage_IsCloudEnabledForApp;
    da_SteamAPI_ISteamRemoteStorage_SetCloudEnabledForApp SteamAPI_ISteamRemoteStorage_SetCloudEnabledForApp;
    da_SteamAPI_ISteamRemoteStorage_UGCDownload SteamAPI_ISteamRemoteStorage_UGCDownload;
    da_SteamAPI_ISteamRemoteStorage_GetUGCDownloadProgress SteamAPI_ISteamRemoteStorage_GetUGCDownloadProgress;
    da_SteamAPI_ISteamRemoteStorage_GetUGCDetails SteamAPI_ISteamRemoteStorage_GetUGCDetails;
    da_SteamAPI_ISteamRemoteStorage_UGCRead SteamAPI_ISteamRemoteStorage_UGCRead;
    da_SteamAPI_ISteamRemoteStorage_GetCachedUGCCount SteamAPI_ISteamRemoteStorage_GetCachedUGCCount;
    da_SteamAPI_ISteamRemoteStorage_GetCachedUGCHandle SteamAPI_ISteamRemoteStorage_GetCachedUGCHandle;
    da_SteamAPI_ISteamRemoteStorage_PublishWorkshopFile SteamAPI_ISteamRemoteStorage_PublishWorkshopFile;
    da_SteamAPI_ISteamRemoteStorage_CreatePublishedFileUpdateRequest SteamAPI_ISteamRemoteStorage_CreatePublishedFileUpdateRequest;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileFile SteamAPI_ISteamRemoteStorage_UpdatePublishedFileFile;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFilePreviewFile SteamAPI_ISteamRemoteStorage_UpdatePublishedFilePreviewFile;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTitle SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTitle;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileDescription SteamAPI_ISteamRemoteStorage_UpdatePublishedFileDescription;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileVisibility SteamAPI_ISteamRemoteStorage_UpdatePublishedFileVisibility;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTags SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTags;
    da_SteamAPI_ISteamRemoteStorage_CommitPublishedFileUpdate SteamAPI_ISteamRemoteStorage_CommitPublishedFileUpdate;
    da_SteamAPI_ISteamRemoteStorage_GetPublishedFileDetails SteamAPI_ISteamRemoteStorage_GetPublishedFileDetails;
    da_SteamAPI_ISteamRemoteStorage_DeletePublishedFile SteamAPI_ISteamRemoteStorage_DeletePublishedFile;
    da_SteamAPI_ISteamRemoteStorage_EnumerateUserPublishedFiles SteamAPI_ISteamRemoteStorage_EnumerateUserPublishedFiles;
    da_SteamAPI_ISteamRemoteStorage_SubscribePublishedFile SteamAPI_ISteamRemoteStorage_SubscribePublishedFile;
    da_SteamAPI_ISteamRemoteStorage_EnumerateUserSubscribedFiles SteamAPI_ISteamRemoteStorage_EnumerateUserSubscribedFiles;
    da_SteamAPI_ISteamRemoteStorage_UnsubscribePublishedFile SteamAPI_ISteamRemoteStorage_UnsubscribePublishedFile;
    da_SteamAPI_ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription SteamAPI_ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription;
    da_SteamAPI_ISteamRemoteStorage_GetPublishedItemVoteDetails SteamAPI_ISteamRemoteStorage_GetPublishedItemVoteDetails;
    da_SteamAPI_ISteamRemoteStorage_UpdateUserPublishedItemVote SteamAPI_ISteamRemoteStorage_UpdateUserPublishedItemVote;
    da_SteamAPI_ISteamRemoteStorage_GetUserPublishedItemVoteDetails SteamAPI_ISteamRemoteStorage_GetUserPublishedItemVoteDetails;
    da_SteamAPI_ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles SteamAPI_ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles;
    da_SteamAPI_ISteamRemoteStorage_PublishVideo SteamAPI_ISteamRemoteStorage_PublishVideo;
    da_SteamAPI_ISteamRemoteStorage_SetUserPublishedFileAction SteamAPI_ISteamRemoteStorage_SetUserPublishedFileAction;
    da_SteamAPI_ISteamRemoteStorage_EnumeratePublishedFilesByUserAction SteamAPI_ISteamRemoteStorage_EnumeratePublishedFilesByUserAction;
    da_SteamAPI_ISteamRemoteStorage_EnumeratePublishedWorkshopFiles SteamAPI_ISteamRemoteStorage_EnumeratePublishedWorkshopFiles;
    da_SteamAPI_ISteamRemoteStorage_UGCDownloadToLocation SteamAPI_ISteamRemoteStorage_UGCDownloadToLocation;

    da_SteamAPI_ISteamUserStats_RequestCurrentStats SteamAPI_ISteamUserStats_RequestCurrentStats;
    da_SteamAPI_ISteamUserStats_GetStat SteamAPI_ISteamUserStats_GetStat;
    da_SteamAPI_ISteamUserStats_GetStat0 SteamAPI_ISteamUserStats_GetStat0;
    da_SteamAPI_ISteamUserStats_SetStat SteamAPI_ISteamUserStats_SetStat;
    da_SteamAPI_ISteamUserStats_SetStat0 SteamAPI_ISteamUserStats_SetStat0;
    da_SteamAPI_ISteamUserStats_UpdateAvgRateStat SteamAPI_ISteamUserStats_UpdateAvgRateStat;
    da_SteamAPI_ISteamUserStats_GetAchievement SteamAPI_ISteamUserStats_GetAchievement;
    da_SteamAPI_ISteamUserStats_SetAchievement SteamAPI_ISteamUserStats_SetAchievement;
    da_SteamAPI_ISteamUserStats_ClearAchievement SteamAPI_ISteamUserStats_ClearAchievement;
    da_SteamAPI_ISteamUserStats_GetAchievementAndUnlockTime SteamAPI_ISteamUserStats_GetAchievementAndUnlockTime;
    da_SteamAPI_ISteamUserStats_StoreStats SteamAPI_ISteamUserStats_StoreStats;
    da_SteamAPI_ISteamUserStats_GetAchievementIcon SteamAPI_ISteamUserStats_GetAchievementIcon;
    da_SteamAPI_ISteamUserStats_GetAchievementDisplayAttribute SteamAPI_ISteamUserStats_GetAchievementDisplayAttribute;
    da_SteamAPI_ISteamUserStats_IndicateAchievementProgress SteamAPI_ISteamUserStats_IndicateAchievementProgress;
    da_SteamAPI_ISteamUserStats_GetNumAchievements SteamAPI_ISteamUserStats_GetNumAchievements;
    da_SteamAPI_ISteamUserStats_GetAchievementName SteamAPI_ISteamUserStats_GetAchievementName;
    da_SteamAPI_ISteamUserStats_RequestUserStats SteamAPI_ISteamUserStats_RequestUserStats;
    da_SteamAPI_ISteamUserStats_GetUserStat SteamAPI_ISteamUserStats_GetUserStat;
    da_SteamAPI_ISteamUserStats_GetUserStat0 SteamAPI_ISteamUserStats_GetUserStat0;
    da_SteamAPI_ISteamUserStats_GetUserAchievement SteamAPI_ISteamUserStats_GetUserAchievement;
    da_SteamAPI_ISteamUserStats_GetUserAchievementAndUnlockTime SteamAPI_ISteamUserStats_GetUserAchievementAndUnlockTime;
    da_SteamAPI_ISteamUserStats_ResetAllStats SteamAPI_ISteamUserStats_ResetAllStats;
    da_SteamAPI_ISteamUserStats_FindOrCreateLeaderboard SteamAPI_ISteamUserStats_FindOrCreateLeaderboard;
    da_SteamAPI_ISteamUserStats_FindLeaderboard SteamAPI_ISteamUserStats_FindLeaderboard;
    da_SteamAPI_ISteamUserStats_GetLeaderboardName SteamAPI_ISteamUserStats_GetLeaderboardName;
    da_SteamAPI_ISteamUserStats_GetLeaderboardEntryCount SteamAPI_ISteamUserStats_GetLeaderboardEntryCount;
    da_SteamAPI_ISteamUserStats_GetLeaderboardSortMethod SteamAPI_ISteamUserStats_GetLeaderboardSortMethod;
    da_SteamAPI_ISteamUserStats_GetLeaderboardDisplayType SteamAPI_ISteamUserStats_GetLeaderboardDisplayType;
    da_SteamAPI_ISteamUserStats_DownloadLeaderboardEntries SteamAPI_ISteamUserStats_DownloadLeaderboardEntries;
    da_SteamAPI_ISteamUserStats_DownloadLeaderboardEntriesForUsers SteamAPI_ISteamUserStats_DownloadLeaderboardEntriesForUsers;
    da_SteamAPI_ISteamUserStats_GetDownloadedLeaderboardEntry SteamAPI_ISteamUserStats_GetDownloadedLeaderboardEntry;
    da_SteamAPI_ISteamUserStats_UploadLeaderboardScore SteamAPI_ISteamUserStats_UploadLeaderboardScore;
    da_SteamAPI_ISteamUserStats_AttachLeaderboardUGC SteamAPI_ISteamUserStats_AttachLeaderboardUGC;
    da_SteamAPI_ISteamUserStats_GetNumberOfCurrentPlayers SteamAPI_ISteamUserStats_GetNumberOfCurrentPlayers;
    da_SteamAPI_ISteamUserStats_RequestGlobalAchievementPercentages SteamAPI_ISteamUserStats_RequestGlobalAchievementPercentages;
    da_SteamAPI_ISteamUserStats_GetMostAchievedAchievementInfo SteamAPI_ISteamUserStats_GetMostAchievedAchievementInfo;
    da_SteamAPI_ISteamUserStats_GetNextMostAchievedAchievementInfo SteamAPI_ISteamUserStats_GetNextMostAchievedAchievementInfo;
    da_SteamAPI_ISteamUserStats_GetAchievementAchievedPercent SteamAPI_ISteamUserStats_GetAchievementAchievedPercent;
    da_SteamAPI_ISteamUserStats_RequestGlobalStats SteamAPI_ISteamUserStats_RequestGlobalStats;
    da_SteamAPI_ISteamUserStats_GetGlobalStat SteamAPI_ISteamUserStats_GetGlobalStat;
    da_SteamAPI_ISteamUserStats_GetGlobalStat0 SteamAPI_ISteamUserStats_GetGlobalStat0;
    da_SteamAPI_ISteamUserStats_GetGlobalStatHistory SteamAPI_ISteamUserStats_GetGlobalStatHistory;
    da_SteamAPI_ISteamUserStats_GetGlobalStatHistory0 SteamAPI_ISteamUserStats_GetGlobalStatHistory0;

    da_SteamAPI_ISteamApps_BIsSubscribed SteamAPI_ISteamApps_BIsSubscribed;
    da_SteamAPI_ISteamApps_BIsLowViolence SteamAPI_ISteamApps_BIsLowViolence;
    da_SteamAPI_ISteamApps_BIsCybercafe SteamAPI_ISteamApps_BIsCybercafe;
    da_SteamAPI_ISteamApps_BIsVACBanned SteamAPI_ISteamApps_BIsVACBanned;
    da_SteamAPI_ISteamApps_GetCurrentGameLanguage SteamAPI_ISteamApps_GetCurrentGameLanguage;
    da_SteamAPI_ISteamApps_GetAvailableGameLanguages SteamAPI_ISteamApps_GetAvailableGameLanguages;
    da_SteamAPI_ISteamApps_BIsSubscribedApp SteamAPI_ISteamApps_BIsSubscribedApp;
    da_SteamAPI_ISteamApps_BIsDlcInstalled SteamAPI_ISteamApps_BIsDlcInstalled;
    da_SteamAPI_ISteamApps_GetEarliestPurchaseUnixTime SteamAPI_ISteamApps_GetEarliestPurchaseUnixTime;
    da_SteamAPI_ISteamApps_BIsSubscribedFromFreeWeekend SteamAPI_ISteamApps_BIsSubscribedFromFreeWeekend;
    da_SteamAPI_ISteamApps_GetDLCCount SteamAPI_ISteamApps_GetDLCCount;
    da_SteamAPI_ISteamApps_BGetDLCDataByIndex SteamAPI_ISteamApps_BGetDLCDataByIndex;
    da_SteamAPI_ISteamApps_InstallDLC SteamAPI_ISteamApps_InstallDLC;
    da_SteamAPI_ISteamApps_UninstallDLC SteamAPI_ISteamApps_UninstallDLC;
    da_SteamAPI_ISteamApps_RequestAppProofOfPurchaseKey SteamAPI_ISteamApps_RequestAppProofOfPurchaseKey;
    da_SteamAPI_ISteamApps_GetCurrentBetaName SteamAPI_ISteamApps_GetCurrentBetaName;
    da_SteamAPI_ISteamApps_MarkContentCorrupt SteamAPI_ISteamApps_MarkContentCorrupt;
    da_SteamAPI_ISteamApps_GetInstalledDepots SteamAPI_ISteamApps_GetInstalledDepots;
    da_SteamAPI_ISteamApps_GetAppInstallDir SteamAPI_ISteamApps_GetAppInstallDir;
    da_SteamAPI_ISteamApps_BIsAppInstalled SteamAPI_ISteamApps_BIsAppInstalled;
    da_SteamAPI_ISteamApps_GetAppOwner SteamAPI_ISteamApps_GetAppOwner;
    da_SteamAPI_ISteamApps_GetLaunchQueryParam SteamAPI_ISteamApps_GetLaunchQueryParam;
    da_SteamAPI_ISteamApps_GetDlcDownloadProgress SteamAPI_ISteamApps_GetDlcDownloadProgress;
    da_SteamAPI_ISteamApps_GetAppBuildId SteamAPI_ISteamApps_GetAppBuildId;

    da_SteamAPI_ISteamNetworking_SendP2PPacket SteamAPI_ISteamNetworking_SendP2PPacket;
    da_SteamAPI_ISteamNetworking_IsP2PPacketAvailable SteamAPI_ISteamNetworking_IsP2PPacketAvailable;
    da_SteamAPI_ISteamNetworking_ReadP2PPacket SteamAPI_ISteamNetworking_ReadP2PPacket;
    da_SteamAPI_ISteamNetworking_AcceptP2PSessionWithUser SteamAPI_ISteamNetworking_AcceptP2PSessionWithUser;
    da_SteamAPI_ISteamNetworking_CloseP2PSessionWithUser SteamAPI_ISteamNetworking_CloseP2PSessionWithUser;
    da_SteamAPI_ISteamNetworking_CloseP2PChannelWithUser SteamAPI_ISteamNetworking_CloseP2PChannelWithUser;
    da_SteamAPI_ISteamNetworking_GetP2PSessionState SteamAPI_ISteamNetworking_GetP2PSessionState;
    da_SteamAPI_ISteamNetworking_AllowP2PPacketRelay SteamAPI_ISteamNetworking_AllowP2PPacketRelay;
    da_SteamAPI_ISteamNetworking_CreateListenSocket SteamAPI_ISteamNetworking_CreateListenSocket;
    da_SteamAPI_ISteamNetworking_CreateP2PConnectionSocket SteamAPI_ISteamNetworking_CreateP2PConnectionSocket;
    da_SteamAPI_ISteamNetworking_CreateConnectionSocket SteamAPI_ISteamNetworking_CreateConnectionSocket;
    da_SteamAPI_ISteamNetworking_DestroySocket SteamAPI_ISteamNetworking_DestroySocket;
    da_SteamAPI_ISteamNetworking_DestroyListenSocket SteamAPI_ISteamNetworking_DestroyListenSocket;
    da_SteamAPI_ISteamNetworking_SendDataOnSocket SteamAPI_ISteamNetworking_SendDataOnSocket;
    da_SteamAPI_ISteamNetworking_IsDataAvailableOnSocket SteamAPI_ISteamNetworking_IsDataAvailableOnSocket;
    da_SteamAPI_ISteamNetworking_RetrieveDataFromSocket SteamAPI_ISteamNetworking_RetrieveDataFromSocket;
    da_SteamAPI_ISteamNetworking_IsDataAvailable SteamAPI_ISteamNetworking_IsDataAvailable;
    da_SteamAPI_ISteamNetworking_RetrieveData SteamAPI_ISteamNetworking_RetrieveData;
    da_SteamAPI_ISteamNetworking_GetSocketInfo SteamAPI_ISteamNetworking_GetSocketInfo;
    da_SteamAPI_ISteamNetworking_GetListenSocketInfo SteamAPI_ISteamNetworking_GetListenSocketInfo;
    da_SteamAPI_ISteamNetworking_GetSocketConnectionType SteamAPI_ISteamNetworking_GetSocketConnectionType;
    da_SteamAPI_ISteamNetworking_GetMaxPacketSize SteamAPI_ISteamNetworking_GetMaxPacketSize;

    da_SteamAPI_ISteamScreenshots_WriteScreenshot SteamAPI_ISteamScreenshots_WriteScreenshot;
    da_SteamAPI_ISteamScreenshots_AddScreenshotToLibrary SteamAPI_ISteamScreenshots_AddScreenshotToLibrary;
    da_SteamAPI_ISteamScreenshots_TriggerScreenshot SteamAPI_ISteamScreenshots_TriggerScreenshot;
    da_SteamAPI_ISteamScreenshots_HookScreenshots SteamAPI_ISteamScreenshots_HookScreenshots;
    da_SteamAPI_ISteamScreenshots_SetLocation SteamAPI_ISteamScreenshots_SetLocation;
    da_SteamAPI_ISteamScreenshots_TagUser SteamAPI_ISteamScreenshots_TagUser;
    da_SteamAPI_ISteamScreenshots_TagPublishedFile SteamAPI_ISteamScreenshots_TagPublishedFile;

    da_SteamAPI_ISteamMusic_BIsEnabled SteamAPI_ISteamMusic_BIsEnabled;
    da_SteamAPI_ISteamMusic_BIsPlaying SteamAPI_ISteamMusic_BIsPlaying;
    da_SteamAPI_ISteamMusic_GetPlaybackStatus SteamAPI_ISteamMusic_GetPlaybackStatus;
    da_SteamAPI_ISteamMusic_Play SteamAPI_ISteamMusic_Play;
    da_SteamAPI_ISteamMusic_Pause SteamAPI_ISteamMusic_Pause;
    da_SteamAPI_ISteamMusic_PlayPrevious SteamAPI_ISteamMusic_PlayPrevious;
    da_SteamAPI_ISteamMusic_PlayNext SteamAPI_ISteamMusic_PlayNext;
    da_SteamAPI_ISteamMusic_SetVolume SteamAPI_ISteamMusic_SetVolume;
    da_SteamAPI_ISteamMusic_GetVolume SteamAPI_ISteamMusic_GetVolume;
    
    da_SteamAPI_ISteamMusicRemote_RegisterSteamMusicRemote SteamAPI_ISteamMusicRemote_RegisterSteamMusicRemote;
    da_SteamAPI_ISteamMusicRemote_DeregisterSteamMusicRemote SteamAPI_ISteamMusicRemote_DeregisterSteamMusicRemote;
    da_SteamAPI_ISteamMusicRemote_BIsCurrentMusicRemote SteamAPI_ISteamMusicRemote_BIsCurrentMusicRemote;
    da_SteamAPI_ISteamMusicRemote_BActivationSuccess SteamAPI_ISteamMusicRemote_BActivationSuccess;
    da_SteamAPI_ISteamMusicRemote_SetDisplayName SteamAPI_ISteamMusicRemote_SetDisplayName;
    da_SteamAPI_ISteamMusicRemote_SetPNGIcon_64x64 SteamAPI_ISteamMusicRemote_SetPNGIcon_64x64;
    da_SteamAPI_ISteamMusicRemote_EnablePlayPrevious SteamAPI_ISteamMusicRemote_EnablePlayPrevious;
    da_SteamAPI_ISteamMusicRemote_EnablePlayNext SteamAPI_ISteamMusicRemote_EnablePlayNext;
    da_SteamAPI_ISteamMusicRemote_EnableShuffled SteamAPI_ISteamMusicRemote_EnableShuffled;
    da_SteamAPI_ISteamMusicRemote_EnableLooped SteamAPI_ISteamMusicRemote_EnableLooped;
    da_SteamAPI_ISteamMusicRemote_EnableQueue SteamAPI_ISteamMusicRemote_EnableQueue;
    da_SteamAPI_ISteamMusicRemote_EnablePlaylists SteamAPI_ISteamMusicRemote_EnablePlaylists;
    da_SteamAPI_ISteamMusicRemote_UpdatePlaybackStatus SteamAPI_ISteamMusicRemote_UpdatePlaybackStatus;
    da_SteamAPI_ISteamMusicRemote_UpdateShuffled SteamAPI_ISteamMusicRemote_UpdateShuffled;
    da_SteamAPI_ISteamMusicRemote_UpdateLooped SteamAPI_ISteamMusicRemote_UpdateLooped;
    da_SteamAPI_ISteamMusicRemote_UpdateVolume SteamAPI_ISteamMusicRemote_UpdateVolume;
    da_SteamAPI_ISteamMusicRemote_CurrentEntryWillChange SteamAPI_ISteamMusicRemote_CurrentEntryWillChange;
    da_SteamAPI_ISteamMusicRemote_CurrentEntryIsAvailable SteamAPI_ISteamMusicRemote_CurrentEntryIsAvailable;
    da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryText SteamAPI_ISteamMusicRemote_UpdateCurrentEntryText;
    da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds SteamAPI_ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds;
    da_SteamAPI_ISteamMusicRemote_UpdateCurrentEntryCoverArt SteamAPI_ISteamMusicRemote_UpdateCurrentEntryCoverArt;
    da_SteamAPI_ISteamMusicRemote_CurrentEntryDidChange SteamAPI_ISteamMusicRemote_CurrentEntryDidChange;
    da_SteamAPI_ISteamMusicRemote_QueueWillChange SteamAPI_ISteamMusicRemote_QueueWillChange;
    da_SteamAPI_ISteamMusicRemote_ResetQueueEntries SteamAPI_ISteamMusicRemote_ResetQueueEntries;
    da_SteamAPI_ISteamMusicRemote_SetQueueEntry SteamAPI_ISteamMusicRemote_SetQueueEntry;
    da_SteamAPI_ISteamMusicRemote_SetCurrentQueueEntry SteamAPI_ISteamMusicRemote_SetCurrentQueueEntry;
    da_SteamAPI_ISteamMusicRemote_QueueDidChange SteamAPI_ISteamMusicRemote_QueueDidChange;
    da_SteamAPI_ISteamMusicRemote_PlaylistWillChange SteamAPI_ISteamMusicRemote_PlaylistWillChange;
    da_SteamAPI_ISteamMusicRemote_ResetPlaylistEntries SteamAPI_ISteamMusicRemote_ResetPlaylistEntries;
    da_SteamAPI_ISteamMusicRemote_SetPlaylistEntry SteamAPI_ISteamMusicRemote_SetPlaylistEntry;
    da_SteamAPI_ISteamMusicRemote_SetCurrentPlaylistEntry SteamAPI_ISteamMusicRemote_SetCurrentPlaylistEntry;
    da_SteamAPI_ISteamMusicRemote_PlaylistDidChange SteamAPI_ISteamMusicRemote_PlaylistDidChange;

    da_SteamAPI_ISteamHTTP_CreateHTTPRequest SteamAPI_ISteamHTTP_CreateHTTPRequest;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestContextValue SteamAPI_ISteamHTTP_SetHTTPRequestContextValue;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestNetworkActivityTimeout SteamAPI_ISteamHTTP_SetHTTPRequestNetworkActivityTimeout;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestHeaderValue SteamAPI_ISteamHTTP_SetHTTPRequestHeaderValue;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestGetOrPostParameter SteamAPI_ISteamHTTP_SetHTTPRequestGetOrPostParameter;
    da_SteamAPI_ISteamHTTP_SendHTTPRequest SteamAPI_ISteamHTTP_SendHTTPRequest;
    da_SteamAPI_ISteamHTTP_SendHTTPRequestAndStreamResponse SteamAPI_ISteamHTTP_SendHTTPRequestAndStreamResponse;
    da_SteamAPI_ISteamHTTP_DeferHTTPRequest SteamAPI_ISteamHTTP_DeferHTTPRequest;
    da_SteamAPI_ISteamHTTP_PrioritizeHTTPRequest SteamAPI_ISteamHTTP_PrioritizeHTTPRequest;
    da_SteamAPI_ISteamHTTP_GetHTTPResponseHeaderSize SteamAPI_ISteamHTTP_GetHTTPResponseHeaderSize;
    da_SteamAPI_ISteamHTTP_GetHTTPResponseHeaderValue SteamAPI_ISteamHTTP_GetHTTPResponseHeaderValue;
    da_SteamAPI_ISteamHTTP_GetHTTPResponseBodySize SteamAPI_ISteamHTTP_GetHTTPResponseBodySize;
    da_SteamAPI_ISteamHTTP_GetHTTPResponseBodyData SteamAPI_ISteamHTTP_GetHTTPResponseBodyData;
    da_SteamAPI_ISteamHTTP_GetHTTPStreamingResponseBodyData SteamAPI_ISteamHTTP_GetHTTPStreamingResponseBodyData;
    da_SteamAPI_ISteamHTTP_ReleaseHTTPRequest SteamAPI_ISteamHTTP_ReleaseHTTPRequest;
    da_SteamAPI_ISteamHTTP_GetHTTPDownloadProgressPct SteamAPI_ISteamHTTP_GetHTTPDownloadProgressPct;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestRawPostBody SteamAPI_ISteamHTTP_SetHTTPRequestRawPostBody;
    da_SteamAPI_ISteamHTTP_CreateCookieContainer SteamAPI_ISteamHTTP_CreateCookieContainer;
    da_SteamAPI_ISteamHTTP_ReleaseCookieContainer SteamAPI_ISteamHTTP_ReleaseCookieContainer;
    da_SteamAPI_ISteamHTTP_SetCookie SteamAPI_ISteamHTTP_SetCookie;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestCookieContainer SteamAPI_ISteamHTTP_SetHTTPRequestCookieContainer;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestUserAgentInfo SteamAPI_ISteamHTTP_SetHTTPRequestUserAgentInfo;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate SteamAPI_ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate;
    da_SteamAPI_ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS SteamAPI_ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS;
    da_SteamAPI_ISteamHTTP_GetHTTPRequestWasTimedOut SteamAPI_ISteamHTTP_GetHTTPRequestWasTimedOut;
    da_SteamAPI_ISteamUnifiedMessages_SendMethod SteamAPI_ISteamUnifiedMessages_SendMethod;
    da_SteamAPI_ISteamUnifiedMessages_GetMethodResponseInfo SteamAPI_ISteamUnifiedMessages_GetMethodResponseInfo;
    da_SteamAPI_ISteamUnifiedMessages_GetMethodResponseData SteamAPI_ISteamUnifiedMessages_GetMethodResponseData;
    da_SteamAPI_ISteamUnifiedMessages_ReleaseMethod SteamAPI_ISteamUnifiedMessages_ReleaseMethod;
    da_SteamAPI_ISteamUnifiedMessages_SendNotification SteamAPI_ISteamUnifiedMessages_SendNotification;
    da_SteamAPI_ISteamController_Init SteamAPI_ISteamController_Init;
    da_SteamAPI_ISteamController_Shutdown SteamAPI_ISteamController_Shutdown;
    da_SteamAPI_ISteamController_RunFrame SteamAPI_ISteamController_RunFrame;
    da_SteamAPI_ISteamController_GetControllerState SteamAPI_ISteamController_GetControllerState;
    da_SteamAPI_ISteamController_TriggerHapticPulse SteamAPI_ISteamController_TriggerHapticPulse;
    da_SteamAPI_ISteamController_SetOverrideMode SteamAPI_ISteamController_SetOverrideMode;
    da_SteamAPI_ISteamUGC_CreateQueryUserUGCRequest SteamAPI_ISteamUGC_CreateQueryUserUGCRequest;
    da_SteamAPI_ISteamUGC_CreateQueryAllUGCRequest SteamAPI_ISteamUGC_CreateQueryAllUGCRequest;
    da_SteamAPI_ISteamUGC_CreateQueryUGCDetailsRequest SteamAPI_ISteamUGC_CreateQueryUGCDetailsRequest;
    da_SteamAPI_ISteamUGC_SendQueryUGCRequest SteamAPI_ISteamUGC_SendQueryUGCRequest;
    da_SteamAPI_ISteamUGC_GetQueryUGCResult SteamAPI_ISteamUGC_GetQueryUGCResult;
    da_SteamAPI_ISteamUGC_GetQueryUGCPreviewURL SteamAPI_ISteamUGC_GetQueryUGCPreviewURL;
    da_SteamAPI_ISteamUGC_GetQueryUGCMetadata SteamAPI_ISteamUGC_GetQueryUGCMetadata;
    da_SteamAPI_ISteamUGC_GetQueryUGCChildren SteamAPI_ISteamUGC_GetQueryUGCChildren;
    da_SteamAPI_ISteamUGC_GetQueryUGCStatistic SteamAPI_ISteamUGC_GetQueryUGCStatistic;
    da_SteamAPI_ISteamUGC_GetQueryUGCNumAdditionalPreviews SteamAPI_ISteamUGC_GetQueryUGCNumAdditionalPreviews;
    da_SteamAPI_ISteamUGC_GetQueryUGCAdditionalPreview SteamAPI_ISteamUGC_GetQueryUGCAdditionalPreview;
    da_SteamAPI_ISteamUGC_GetQueryUGCNumKeyValueTags SteamAPI_ISteamUGC_GetQueryUGCNumKeyValueTags;
    da_SteamAPI_ISteamUGC_GetQueryUGCKeyValueTag SteamAPI_ISteamUGC_GetQueryUGCKeyValueTag;
    da_SteamAPI_ISteamUGC_ReleaseQueryUGCRequest SteamAPI_ISteamUGC_ReleaseQueryUGCRequest;
    da_SteamAPI_ISteamUGC_AddRequiredTag SteamAPI_ISteamUGC_AddRequiredTag;
    da_SteamAPI_ISteamUGC_AddExcludedTag SteamAPI_ISteamUGC_AddExcludedTag;
    da_SteamAPI_ISteamUGC_SetReturnKeyValueTags SteamAPI_ISteamUGC_SetReturnKeyValueTags;
    da_SteamAPI_ISteamUGC_SetReturnLongDescription SteamAPI_ISteamUGC_SetReturnLongDescription;
    da_SteamAPI_ISteamUGC_SetReturnMetadata SteamAPI_ISteamUGC_SetReturnMetadata;
    da_SteamAPI_ISteamUGC_SetReturnChildren SteamAPI_ISteamUGC_SetReturnChildren;
    da_SteamAPI_ISteamUGC_SetReturnAdditionalPreviews SteamAPI_ISteamUGC_SetReturnAdditionalPreviews;
    da_SteamAPI_ISteamUGC_SetReturnTotalOnly SteamAPI_ISteamUGC_SetReturnTotalOnly;
    da_SteamAPI_ISteamUGC_SetLanguage SteamAPI_ISteamUGC_SetLanguage;
    da_SteamAPI_ISteamUGC_SetAllowCachedResponse SteamAPI_ISteamUGC_SetAllowCachedResponse;
    da_SteamAPI_ISteamUGC_SetCloudFileNameFilter SteamAPI_ISteamUGC_SetCloudFileNameFilter;
    da_SteamAPI_ISteamUGC_SetMatchAnyTag SteamAPI_ISteamUGC_SetMatchAnyTag;
    da_SteamAPI_ISteamUGC_SetSearchText SteamAPI_ISteamUGC_SetSearchText;
    da_SteamAPI_ISteamUGC_SetRankedByTrendDays SteamAPI_ISteamUGC_SetRankedByTrendDays;
    da_SteamAPI_ISteamUGC_AddRequiredKeyValueTag SteamAPI_ISteamUGC_AddRequiredKeyValueTag;
    da_SteamAPI_ISteamUGC_RequestUGCDetails SteamAPI_ISteamUGC_RequestUGCDetails;
    da_SteamAPI_ISteamUGC_CreateItem SteamAPI_ISteamUGC_CreateItem;
    da_SteamAPI_ISteamUGC_StartItemUpdate SteamAPI_ISteamUGC_StartItemUpdate;
    da_SteamAPI_ISteamUGC_SetItemTitle SteamAPI_ISteamUGC_SetItemTitle;
    da_SteamAPI_ISteamUGC_SetItemDescription SteamAPI_ISteamUGC_SetItemDescription;
    da_SteamAPI_ISteamUGC_SetItemUpdateLanguage SteamAPI_ISteamUGC_SetItemUpdateLanguage;
    da_SteamAPI_ISteamUGC_SetItemMetadata SteamAPI_ISteamUGC_SetItemMetadata;
    da_SteamAPI_ISteamUGC_SetItemVisibility SteamAPI_ISteamUGC_SetItemVisibility;
    da_SteamAPI_ISteamUGC_SetItemTags SteamAPI_ISteamUGC_SetItemTags;
    da_SteamAPI_ISteamUGC_SetItemContent SteamAPI_ISteamUGC_SetItemContent;
    da_SteamAPI_ISteamUGC_SetItemPreview SteamAPI_ISteamUGC_SetItemPreview;
    da_SteamAPI_ISteamUGC_RemoveItemKeyValueTags SteamAPI_ISteamUGC_RemoveItemKeyValueTags;
    da_SteamAPI_ISteamUGC_AddItemKeyValueTag SteamAPI_ISteamUGC_AddItemKeyValueTag;
    da_SteamAPI_ISteamUGC_SubmitItemUpdate SteamAPI_ISteamUGC_SubmitItemUpdate;
    da_SteamAPI_ISteamUGC_GetItemUpdateProgress SteamAPI_ISteamUGC_GetItemUpdateProgress;
    da_SteamAPI_ISteamUGC_SetUserItemVote SteamAPI_ISteamUGC_SetUserItemVote;
    da_SteamAPI_ISteamUGC_GetUserItemVote SteamAPI_ISteamUGC_GetUserItemVote;
    da_SteamAPI_ISteamUGC_AddItemToFavorites SteamAPI_ISteamUGC_AddItemToFavorites;
    da_SteamAPI_ISteamUGC_RemoveItemFromFavorites SteamAPI_ISteamUGC_RemoveItemFromFavorites;
    da_SteamAPI_ISteamUGC_SubscribeItem SteamAPI_ISteamUGC_SubscribeItem;
    da_SteamAPI_ISteamUGC_UnsubscribeItem SteamAPI_ISteamUGC_UnsubscribeItem;
    da_SteamAPI_ISteamUGC_GetNumSubscribedItems SteamAPI_ISteamUGC_GetNumSubscribedItems;
    da_SteamAPI_ISteamUGC_GetSubscribedItems SteamAPI_ISteamUGC_GetSubscribedItems;
    da_SteamAPI_ISteamUGC_GetItemState SteamAPI_ISteamUGC_GetItemState;
    da_SteamAPI_ISteamUGC_GetItemInstallInfo SteamAPI_ISteamUGC_GetItemInstallInfo;
    da_SteamAPI_ISteamUGC_GetItemDownloadInfo SteamAPI_ISteamUGC_GetItemDownloadInfo;
    da_SteamAPI_ISteamUGC_DownloadItem SteamAPI_ISteamUGC_DownloadItem;
    da_SteamAPI_ISteamAppList_GetNumInstalledApps SteamAPI_ISteamAppList_GetNumInstalledApps;
    da_SteamAPI_ISteamAppList_GetInstalledApps SteamAPI_ISteamAppList_GetInstalledApps;
    da_SteamAPI_ISteamAppList_GetAppName SteamAPI_ISteamAppList_GetAppName;
    da_SteamAPI_ISteamAppList_GetAppInstallDir SteamAPI_ISteamAppList_GetAppInstallDir;
    da_SteamAPI_ISteamAppList_GetAppBuildId SteamAPI_ISteamAppList_GetAppBuildId;
    da_SteamAPI_ISteamHTMLSurface_DestructISteamHTMLSurface SteamAPI_ISteamHTMLSurface_DestructISteamHTMLSurface;
    da_SteamAPI_ISteamHTMLSurface_Init SteamAPI_ISteamHTMLSurface_Init;
    da_SteamAPI_ISteamHTMLSurface_Shutdown SteamAPI_ISteamHTMLSurface_Shutdown;
    da_SteamAPI_ISteamHTMLSurface_CreateBrowser SteamAPI_ISteamHTMLSurface_CreateBrowser;
    da_SteamAPI_ISteamHTMLSurface_RemoveBrowser SteamAPI_ISteamHTMLSurface_RemoveBrowser;
    da_SteamAPI_ISteamHTMLSurface_LoadURL SteamAPI_ISteamHTMLSurface_LoadURL;
    da_SteamAPI_ISteamHTMLSurface_SetSize SteamAPI_ISteamHTMLSurface_SetSize;
    da_SteamAPI_ISteamHTMLSurface_StopLoad SteamAPI_ISteamHTMLSurface_StopLoad;
    da_SteamAPI_ISteamHTMLSurface_Reload SteamAPI_ISteamHTMLSurface_Reload;
    da_SteamAPI_ISteamHTMLSurface_GoBack SteamAPI_ISteamHTMLSurface_GoBack;
    da_SteamAPI_ISteamHTMLSurface_GoForward SteamAPI_ISteamHTMLSurface_GoForward;
    da_SteamAPI_ISteamHTMLSurface_AddHeader SteamAPI_ISteamHTMLSurface_AddHeader;
    da_SteamAPI_ISteamHTMLSurface_ExecuteJavascript SteamAPI_ISteamHTMLSurface_ExecuteJavascript;
    da_SteamAPI_ISteamHTMLSurface_MouseUp SteamAPI_ISteamHTMLSurface_MouseUp;
    da_SteamAPI_ISteamHTMLSurface_MouseDown SteamAPI_ISteamHTMLSurface_MouseDown;
    da_SteamAPI_ISteamHTMLSurface_MouseDoubleClick SteamAPI_ISteamHTMLSurface_MouseDoubleClick;
    da_SteamAPI_ISteamHTMLSurface_MouseMove SteamAPI_ISteamHTMLSurface_MouseMove;
    da_SteamAPI_ISteamHTMLSurface_MouseWheel SteamAPI_ISteamHTMLSurface_MouseWheel;
    da_SteamAPI_ISteamHTMLSurface_KeyDown SteamAPI_ISteamHTMLSurface_KeyDown;
    da_SteamAPI_ISteamHTMLSurface_KeyUp SteamAPI_ISteamHTMLSurface_KeyUp;
    da_SteamAPI_ISteamHTMLSurface_KeyChar SteamAPI_ISteamHTMLSurface_KeyChar;
    da_SteamAPI_ISteamHTMLSurface_SetHorizontalScroll SteamAPI_ISteamHTMLSurface_SetHorizontalScroll;
    da_SteamAPI_ISteamHTMLSurface_SetVerticalScroll SteamAPI_ISteamHTMLSurface_SetVerticalScroll;
    da_SteamAPI_ISteamHTMLSurface_SetKeyFocus SteamAPI_ISteamHTMLSurface_SetKeyFocus;
    da_SteamAPI_ISteamHTMLSurface_ViewSource SteamAPI_ISteamHTMLSurface_ViewSource;
    da_SteamAPI_ISteamHTMLSurface_CopyToClipboard SteamAPI_ISteamHTMLSurface_CopyToClipboard;
    da_SteamAPI_ISteamHTMLSurface_PasteFromClipboard SteamAPI_ISteamHTMLSurface_PasteFromClipboard;
    da_SteamAPI_ISteamHTMLSurface_Find SteamAPI_ISteamHTMLSurface_Find;
    da_SteamAPI_ISteamHTMLSurface_StopFind SteamAPI_ISteamHTMLSurface_StopFind;
    da_SteamAPI_ISteamHTMLSurface_GetLinkAtPosition SteamAPI_ISteamHTMLSurface_GetLinkAtPosition;
    da_SteamAPI_ISteamHTMLSurface_SetCookie SteamAPI_ISteamHTMLSurface_SetCookie;
    da_SteamAPI_ISteamHTMLSurface_SetPageScaleFactor SteamAPI_ISteamHTMLSurface_SetPageScaleFactor;
    da_SteamAPI_ISteamHTMLSurface_SetBackgroundMode SteamAPI_ISteamHTMLSurface_SetBackgroundMode;
    da_SteamAPI_ISteamHTMLSurface_AllowStartRequest SteamAPI_ISteamHTMLSurface_AllowStartRequest;
    da_SteamAPI_ISteamHTMLSurface_JSDialogResponse SteamAPI_ISteamHTMLSurface_JSDialogResponse;
    da_SteamAPI_ISteamHTMLSurface_FileLoadDialogResponse SteamAPI_ISteamHTMLSurface_FileLoadDialogResponse;
    da_SteamAPI_ISteamInventory_GetResultStatus SteamAPI_ISteamInventory_GetResultStatus;
    da_SteamAPI_ISteamInventory_GetResultItems SteamAPI_ISteamInventory_GetResultItems;
    da_SteamAPI_ISteamInventory_GetResultTimestamp SteamAPI_ISteamInventory_GetResultTimestamp;
    da_SteamAPI_ISteamInventory_CheckResultSteamID SteamAPI_ISteamInventory_CheckResultSteamID;
    da_SteamAPI_ISteamInventory_DestroyResult SteamAPI_ISteamInventory_DestroyResult;
    da_SteamAPI_ISteamInventory_GetAllItems SteamAPI_ISteamInventory_GetAllItems;
    da_SteamAPI_ISteamInventory_GetItemsByID SteamAPI_ISteamInventory_GetItemsByID;
    da_SteamAPI_ISteamInventory_SerializeResult SteamAPI_ISteamInventory_SerializeResult;
    da_SteamAPI_ISteamInventory_DeserializeResult SteamAPI_ISteamInventory_DeserializeResult;
    da_SteamAPI_ISteamInventory_GenerateItems SteamAPI_ISteamInventory_GenerateItems;
    da_SteamAPI_ISteamInventory_GrantPromoItems SteamAPI_ISteamInventory_GrantPromoItems;
    da_SteamAPI_ISteamInventory_AddPromoItem SteamAPI_ISteamInventory_AddPromoItem;
    da_SteamAPI_ISteamInventory_AddPromoItems SteamAPI_ISteamInventory_AddPromoItems;
    da_SteamAPI_ISteamInventory_ConsumeItem SteamAPI_ISteamInventory_ConsumeItem;
    da_SteamAPI_ISteamInventory_ExchangeItems SteamAPI_ISteamInventory_ExchangeItems;
    da_SteamAPI_ISteamInventory_TransferItemQuantity SteamAPI_ISteamInventory_TransferItemQuantity;
    da_SteamAPI_ISteamInventory_SendItemDropHeartbeat SteamAPI_ISteamInventory_SendItemDropHeartbeat;
    da_SteamAPI_ISteamInventory_TriggerItemDrop SteamAPI_ISteamInventory_TriggerItemDrop;
    da_SteamAPI_ISteamInventory_TradeItems SteamAPI_ISteamInventory_TradeItems;
    da_SteamAPI_ISteamInventory_LoadItemDefinitions SteamAPI_ISteamInventory_LoadItemDefinitions;
    da_SteamAPI_ISteamInventory_GetItemDefinitionIDs SteamAPI_ISteamInventory_GetItemDefinitionIDs;
    da_SteamAPI_ISteamInventory_GetItemDefinitionProperty SteamAPI_ISteamInventory_GetItemDefinitionProperty;
    da_SteamAPI_ISteamVideo_GetVideoURL SteamAPI_ISteamVideo_GetVideoURL;
    da_SteamAPI_ISteamVideo_IsBroadcasting SteamAPI_ISteamVideo_IsBroadcasting;
    da_SteamAPI_ISteamGameServer_InitGameServer SteamAPI_ISteamGameServer_InitGameServer;
    da_SteamAPI_ISteamGameServer_SetProduct SteamAPI_ISteamGameServer_SetProduct;
    da_SteamAPI_ISteamGameServer_SetGameDescription SteamAPI_ISteamGameServer_SetGameDescription;
    da_SteamAPI_ISteamGameServer_SetModDir SteamAPI_ISteamGameServer_SetModDir;
    da_SteamAPI_ISteamGameServer_SetDedicatedServer SteamAPI_ISteamGameServer_SetDedicatedServer;
    da_SteamAPI_ISteamGameServer_LogOn SteamAPI_ISteamGameServer_LogOn;
    da_SteamAPI_ISteamGameServer_LogOnAnonymous SteamAPI_ISteamGameServer_LogOnAnonymous;
    da_SteamAPI_ISteamGameServer_LogOff SteamAPI_ISteamGameServer_LogOff;
    da_SteamAPI_ISteamGameServer_BLoggedOn SteamAPI_ISteamGameServer_BLoggedOn;
    da_SteamAPI_ISteamGameServer_BSecure SteamAPI_ISteamGameServer_BSecure;
    da_SteamAPI_ISteamGameServer_GetSteamID SteamAPI_ISteamGameServer_GetSteamID;
    da_SteamAPI_ISteamGameServer_WasRestartRequested SteamAPI_ISteamGameServer_WasRestartRequested;
    da_SteamAPI_ISteamGameServer_SetMaxPlayerCount SteamAPI_ISteamGameServer_SetMaxPlayerCount;
    da_SteamAPI_ISteamGameServer_SetBotPlayerCount SteamAPI_ISteamGameServer_SetBotPlayerCount;
    da_SteamAPI_ISteamGameServer_SetServerName SteamAPI_ISteamGameServer_SetServerName;
    da_SteamAPI_ISteamGameServer_SetMapName SteamAPI_ISteamGameServer_SetMapName;
    da_SteamAPI_ISteamGameServer_SetPasswordProtected SteamAPI_ISteamGameServer_SetPasswordProtected;
    da_SteamAPI_ISteamGameServer_SetSpectatorPort SteamAPI_ISteamGameServer_SetSpectatorPort;
    da_SteamAPI_ISteamGameServer_SetSpectatorServerName SteamAPI_ISteamGameServer_SetSpectatorServerName;
    da_SteamAPI_ISteamGameServer_ClearAllKeyValues SteamAPI_ISteamGameServer_ClearAllKeyValues;
    da_SteamAPI_ISteamGameServer_SetKeyValue SteamAPI_ISteamGameServer_SetKeyValue;
    da_SteamAPI_ISteamGameServer_SetGameTags SteamAPI_ISteamGameServer_SetGameTags;
    da_SteamAPI_ISteamGameServer_SetGameData SteamAPI_ISteamGameServer_SetGameData;
    da_SteamAPI_ISteamGameServer_SetRegion SteamAPI_ISteamGameServer_SetRegion;
    da_SteamAPI_ISteamGameServer_SendUserConnectAndAuthenticate SteamAPI_ISteamGameServer_SendUserConnectAndAuthenticate;
    da_SteamAPI_ISteamGameServer_CreateUnauthenticatedUserConnection SteamAPI_ISteamGameServer_CreateUnauthenticatedUserConnection;
    da_SteamAPI_ISteamGameServer_SendUserDisconnect SteamAPI_ISteamGameServer_SendUserDisconnect;
    da_SteamAPI_ISteamGameServer_BUpdateUserData SteamAPI_ISteamGameServer_BUpdateUserData;
    da_SteamAPI_ISteamGameServer_GetAuthSessionTicket SteamAPI_ISteamGameServer_GetAuthSessionTicket;
    da_SteamAPI_ISteamGameServer_BeginAuthSession SteamAPI_ISteamGameServer_BeginAuthSession;
    da_SteamAPI_ISteamGameServer_EndAuthSession SteamAPI_ISteamGameServer_EndAuthSession;
    da_SteamAPI_ISteamGameServer_CancelAuthTicket SteamAPI_ISteamGameServer_CancelAuthTicket;
    da_SteamAPI_ISteamGameServer_UserHasLicenseForApp SteamAPI_ISteamGameServer_UserHasLicenseForApp;
    da_SteamAPI_ISteamGameServer_RequestUserGroupStatus SteamAPI_ISteamGameServer_RequestUserGroupStatus;
    da_SteamAPI_ISteamGameServer_GetGameplayStats SteamAPI_ISteamGameServer_GetGameplayStats;
    da_SteamAPI_ISteamGameServer_GetServerReputation SteamAPI_ISteamGameServer_GetServerReputation;
    da_SteamAPI_ISteamGameServer_GetPublicIP SteamAPI_ISteamGameServer_GetPublicIP;
    da_SteamAPI_ISteamGameServer_HandleIncomingPacket SteamAPI_ISteamGameServer_HandleIncomingPacket;
    da_SteamAPI_ISteamGameServer_GetNextOutgoingPacket SteamAPI_ISteamGameServer_GetNextOutgoingPacket;
    da_SteamAPI_ISteamGameServer_EnableHeartbeats SteamAPI_ISteamGameServer_EnableHeartbeats;
    da_SteamAPI_ISteamGameServer_SetHeartbeatInterval SteamAPI_ISteamGameServer_SetHeartbeatInterval;
    da_SteamAPI_ISteamGameServer_ForceHeartbeat SteamAPI_ISteamGameServer_ForceHeartbeat;
    da_SteamAPI_ISteamGameServer_AssociateWithClan SteamAPI_ISteamGameServer_AssociateWithClan;
    da_SteamAPI_ISteamGameServer_ComputeNewPlayerCompatibility SteamAPI_ISteamGameServer_ComputeNewPlayerCompatibility;
    da_SteamAPI_ISteamGameServerStats_RequestUserStats SteamAPI_ISteamGameServerStats_RequestUserStats;
    da_SteamAPI_ISteamGameServerStats_GetUserStat SteamAPI_ISteamGameServerStats_GetUserStat;
    da_SteamAPI_ISteamGameServerStats_GetUserStat0 SteamAPI_ISteamGameServerStats_GetUserStat0;
    da_SteamAPI_ISteamGameServerStats_GetUserAchievement SteamAPI_ISteamGameServerStats_GetUserAchievement;
    da_SteamAPI_ISteamGameServerStats_SetUserStat SteamAPI_ISteamGameServerStats_SetUserStat;
    da_SteamAPI_ISteamGameServerStats_SetUserStat0 SteamAPI_ISteamGameServerStats_SetUserStat0;
    da_SteamAPI_ISteamGameServerStats_UpdateUserAvgRateStat SteamAPI_ISteamGameServerStats_UpdateUserAvgRateStat;
    da_SteamAPI_ISteamGameServerStats_SetUserAchievement SteamAPI_ISteamGameServerStats_SetUserAchievement;
    da_SteamAPI_ISteamGameServerStats_ClearUserAchievement SteamAPI_ISteamGameServerStats_ClearUserAchievement;
    da_SteamAPI_ISteamGameServerStats_StoreUserStats SteamAPI_ISteamGameServerStats_StoreUserStats;
}